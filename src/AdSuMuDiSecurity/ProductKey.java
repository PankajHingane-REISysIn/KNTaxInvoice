/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package AdSuMuDiSecurity;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.math.BigInteger;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author pc5
 */
public class ProductKey extends javax.swing.JFrame {

    BigInteger constant;
    static public byte[] b;
    DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
    static String operatingSystemDrive = System.getenv("SystemDrive");

    /**
     * Creates new form ProductKey
     */
    public ProductKey() {
        this.setSize(200, 589);
        this.setLocation(400, 150);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldPKeyPart1 = new javax.swing.JTextField();
        jTextFieldPKeyPart2 = new javax.swing.JTextField();
        jTextFieldPKeyPart3 = new javax.swing.JTextField();
        jTextFieldPKeyPart4 = new javax.swing.JTextField();
        jTextFieldPKeyPart5 = new javax.swing.JTextField();
        jButtonSubmit = new javax.swing.JButton();

        setTitle(org.openide.util.NbBundle.getMessage(ProductKey.class, "ProductKey.title")); // NOI18N
        setPreferredSize(new java.awt.Dimension(589, 200));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ProductKey.class, "ProductKey.jLabel1.text")); // NOI18N

        jTextFieldPKeyPart1.setText(org.openide.util.NbBundle.getMessage(ProductKey.class, "ProductKey.jTextFieldPKeyPart1.text")); // NOI18N

        jTextFieldPKeyPart2.setText(org.openide.util.NbBundle.getMessage(ProductKey.class, "ProductKey.jTextFieldPKeyPart2.text")); // NOI18N

        jTextFieldPKeyPart3.setText(org.openide.util.NbBundle.getMessage(ProductKey.class, "ProductKey.jTextFieldPKeyPart3.text")); // NOI18N

        jTextFieldPKeyPart4.setText(org.openide.util.NbBundle.getMessage(ProductKey.class, "ProductKey.jTextFieldPKeyPart4.text")); // NOI18N

        jTextFieldPKeyPart5.setText(org.openide.util.NbBundle.getMessage(ProductKey.class, "ProductKey.jTextFieldPKeyPart5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButtonSubmit, org.openide.util.NbBundle.getMessage(ProductKey.class, "ProductKey.jButtonSubmit.text")); // NOI18N
        jButtonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(202, 202, 202))
            .addGroup(layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonSubmit)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldPKeyPart1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldPKeyPart2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldPKeyPart3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jTextFieldPKeyPart4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldPKeyPart5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPKeyPart1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPKeyPart2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPKeyPart3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPKeyPart4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPKeyPart5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jButtonSubmit)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitActionPerformed

        String keyPart1 = jTextFieldPKeyPart1.getText();
        keyPart1 = keyPart1 + "-";
        String keyPart2 = jTextFieldPKeyPart2.getText();
        keyPart2 = keyPart2 + "-";
        String keyPart3 = jTextFieldPKeyPart3.getText();
        keyPart3 = keyPart3 + "-";
        String keyPart4 = jTextFieldPKeyPart4.getText();
        keyPart4 = keyPart4 + "-";
        String keyPart5 = jTextFieldPKeyPart5.getText();;

        String testKey = keyPart1 + keyPart2 + keyPart3 + keyPart4 + keyPart5;

        ObjectInputStream inputStream = null;
        try {
            inputStream = new ObjectInputStream(new FileInputStream(operatingSystemDrive + "\\CipherProductKeyFile.dat"));
            BigInteger bigReadBack = (BigInteger) inputStream.readObject();
            System.out.println("got it--->>>" + bigReadBack);
            String Key = RSA.generateProductKey(bigReadBack);
            System.out.println("Key--->>" + Key);
            System.out.println("testkey-->>" + testKey);
            if (testKey.equalsIgnoreCase(Key)) {

                JOptionPane.showMessageDialog(null, "Key Match Product Registered");
                java.util.Date date = new java.util.Date();
                Calendar cal = Calendar.getInstance();
                cal.setTime(date);
                cal.add(Calendar.MINUTE, 3);
                String expirationDate = dateFormat.format(cal.getTime());

                JOptionPane.showMessageDialog(null, "Your Trial Version Is Valid Till\n" + expirationDate);


                BigInteger big = NewRSA.getEImplementation(expirationDate);
                System.out.println("big---->>>" + big);

//                File keyfile = CreateNewFile.createExpirationDateFile();
//                OutputStream fos = new FileOutputStream(keyfile.getAbsoluteFile());
//                ObjectOutputStream outputStream = new ObjectOutputStream(fos);
//                outputStream.writeObject(big);
//                fos.close();

                //ProgressBarWithNewGraphics.runProgressBar(big);

//                String str = NewRSA.getDImplementation(big);
//                System.out.println("datedecrypt---->>>"+str);

//                File expirationDatefile = CreateNewFile.createExpirationDateFile();
//                FileWriter expirationDatefilewriter = new FileWriter(expirationDatefile.getAbsoluteFile());
//                BufferedWriter expirationDatefilebufferwriter = new BufferedWriter(expirationDatefilewriter);
//                expirationDatefilebufferwriter.write(expirationDate);
//                expirationDatefilebufferwriter.close();

            } else {

                JOptionPane.showMessageDialog(null, "Key Match Failed Product Could Not Be Registered");

            }



        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ProductKey.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ProductKey.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                inputStream.close();
            } catch (IOException ex) {
                Logger.getLogger(ProductKey.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonSubmitActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextFieldPKeyPart1;
    private javax.swing.JTextField jTextFieldPKeyPart2;
    private javax.swing.JTextField jTextFieldPKeyPart3;
    private javax.swing.JTextField jTextFieldPKeyPart4;
    private javax.swing.JTextField jTextFieldPKeyPart5;
    // End of variables declaration//GEN-END:variables
}
