/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gen.other.DatabaseBackupRestore;

import gen.other.CompanySettings.CompanySettingsDTO;
import gen.other.CompanySettings.UnzipUtility;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.spec.AlgorithmParameterSpec;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.Cipher;
import javax.crypto.CipherInputStream;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author admin
 */
public class DatabaseRestore extends javax.swing.JInternalFrame {

    DefaultTableModel tablemodelCompany_Company_Restore, tablemodelRestoreCompany_Company_Restore;
    List<String> company_List_Clicked_Company_Restore = new ArrayList<String>();
    List<CompanySettingsDTO> company_List_Restore_Company_Restore = new ArrayList<CompanySettingsDTO>();
    List<String> company_Database_List_Restore = new ArrayList<String>();
    List<String> company_SQLFile_List_Restore = new ArrayList<String>();
    //Map<String, String> map_Database_And_File_Name = new HashMap<String, String>();
    List<Company_InformationDTO> company_InformationDTOList_Company_Restore = new ArrayList<Company_InformationDTO>();
    List<Company_InformationDTO> company_InformationDTO_Final_List_Company_Restore = new ArrayList<Company_InformationDTO>();
    List<CompanySettingsDTO> company_Full_InformationDTOList_Company_Restore = new ArrayList<CompanySettingsDTO>();
    List<String> unZip_Company_File_List_Company_Restore = new ArrayList<String>();
    String path_Company_Restore = "";
    File fileChooser_Company_Restore = null;
    private static Cipher ecipher_Company_Restore;
    private static Cipher dcipher_Company_Restore;
    private static byte[] iv = {
	(byte) 0xB2, (byte) 0x12, (byte) 0xD5, (byte) 0xB2,
	(byte) 0x44, (byte) 0x21, (byte) 0xC3, (byte) 0xC3,
	(byte) 0xB2, (byte) 0x12, (byte) 0xD5, (byte) 0xB2,
	(byte) 0x44, (byte) 0x21, (byte) 0xC3, (byte) 0xC3,};
   // private List<CompanySettingsDTO> companySettingsDTOLIst = new ArrayList<CompanySettingsDTO>();

    /**
     * Creates new form DatabaseBackUp
     */
    public DatabaseRestore(String title) {
	initComponents();
	this.setTitle(title);
	initialise_Company_Restore();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCompanyRestoreUp_Company_Restore = new javax.swing.JTable();
        btnRestore_Company_Restore = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtSourcePath_Company_Restore = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        buttonFilePath_Company_Restore = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableCompanyList_Company_Restore = new javax.swing.JTable();

        setMinimumSize(new java.awt.Dimension(500, 500));

        tableCompanyRestoreUp_Company_Restore.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableCompanyRestoreUp_Company_Restore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCompanyRestoreUp_Company_RestoreMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCompanyRestoreUp_Company_Restore);

        org.openide.awt.Mnemonics.setLocalizedText(btnRestore_Company_Restore, org.openide.util.NbBundle.getMessage(DatabaseRestore.class, "DatabaseRestore.btnRestore_Company_Restore.text")); // NOI18N
        btnRestore_Company_Restore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestore_Company_RestoreActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DatabaseRestore.class, "DatabaseRestore.jLabel1.text")); // NOI18N

        txtSourcePath_Company_Restore.setText(org.openide.util.NbBundle.getMessage(DatabaseRestore.class, "DatabaseRestore.txtSourcePath_Company_Restore.text")); // NOI18N
        txtSourcePath_Company_Restore.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSourcePath_Company_RestoreKeyPressed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(DatabaseRestore.class, "DatabaseRestore.jLabel2.text")); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(buttonFilePath_Company_Restore, org.openide.util.NbBundle.getMessage(DatabaseRestore.class, "DatabaseRestore.buttonFilePath_Company_Restore.text")); // NOI18N
        buttonFilePath_Company_Restore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonFilePath_Company_RestoreMouseClicked(evt);
            }
        });
        buttonFilePath_Company_Restore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFilePath_Company_RestoreActionPerformed(evt);
            }
        });

        tableCompanyList_Company_Restore.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableCompanyList_Company_Restore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCompanyList_Company_RestoreMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableCompanyList_Company_Restore);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSourcePath_Company_Restore, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonFilePath_Company_Restore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 480, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(274, 274, 274)
                .addComponent(btnRestore_Company_Restore, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSourcePath_Company_Restore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonFilePath_Company_Restore)
                            .addComponent(jLabel1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel2)))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRestore_Company_Restore)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRestore_Company_RestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestore_Company_RestoreActionPerformed
	try {
	    // TODO add your handling code here:
	    if (validation_Company_Restore()) {
		//insert seletected company_Name and ID for Restore in company_List_Restore_Company_Restore List
		for (int i = 0; i < tableCompanyRestoreUp_Company_Restore.getRowCount(); i++) {
		    CompanySettingsDTO companySettingsDTO_Company_Restore = new CompanySettingsDTO();
		    // company_List_Restore_Company_Restore.add(tableCompanyRestoreUp.getValueAt(i, 0).toString().trim());
		    companySettingsDTO_Company_Restore.setCompany_name(tableCompanyRestoreUp_Company_Restore.getValueAt(i, 0).toString().trim());
		    companySettingsDTO_Company_Restore.setCompany_id(Long.parseLong(tableCompanyRestoreUp_Company_Restore.getValueAt(i, 1).toString().trim()));
		    company_List_Restore_Company_Restore.add(companySettingsDTO_Company_Restore);
		}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	    
		// already code is present when comapny name fetch 
		// ask to Pankaj Sir 

//	    //Decrypt the Company information files to see company,database,companyfile name
//	    decryptfiles(fileChooser_Company_Restore + "/" + "All_Database_information", ".enc");
//
//	    /// Read all content from company information file and save it in company_InformationDTO
//	    BufferedReader brin;
//	    brin = new BufferedReader(new FileReader(fileChooser_Company_Restore + "/" + "All_Database_information.txt"));
//	    String line = brin.readLine();
//	    //	int count = 0;
//	    while (line != null) {
//		if (!line.equals("")) {
//		    // DTO to store all information of company 
//		    Company_InformationDTO company_InformationDTO = new Company_InformationDTO();
//		    String company_information = line;
//		    String last_name = "";
////			if (count == 2) {
//		    StringTokenizer st = new StringTokenizer(company_information, " ");
//
//		    // count to save cocompany,database,companyfile name in respective DTO field
//		    int count = 0;
//		    while (st.hasMoreTokens()) {
//			switch (count) {
//			    case 0:
//				company_InformationDTO.setCompany_Name(st.nextToken());
//			    case 1:
//				company_InformationDTO.setCompany_Database_Name(st.nextToken());
//			    case 2:
//				company_InformationDTO.setCompany_SQL_File_Name(st.nextToken());
//			}
////			last_name = st.nextToken();
//			count++;
//		    }
////			}
//		    System.out.println("fdfsdfd         " + last_name);
//		    company_InformationDTOList_Company_Restore.add(company_InformationDTO);
//		}
//		line = brin.readLine();
////		    count++;
//		
//	    }
//	    brin.close();
//
//
//	    for(Company_InformationDTO company_InformationDTO : company_InformationDTOList_Company_Restore){
//		System.out.println("Comany NMAe 0000-    ----------- "+company_InformationDTO.getCompany_Name() );
//		System.out.println("Comany Datqabase  0000-    ----------- "+company_InformationDTO.getCompany_Database_Name() );
//		System.out.println("Comany File NAme 0000-    ----------- "+company_InformationDTO.getCompany_SQL_File_Name() );
//	    }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	    	    

		// unzip file here and getting all .enc files
		String zipFilePath = fileChooser_Company_Restore + "/" + "ffdfdsgfd.abc";
		String destDirectory = "C:/Check";

		UnzipUtility unzipper = new UnzipUtility();
		try {
		    unZip_Company_File_List_Company_Restore = unzipper.unzip(zipFilePath, destDirectory);
		} catch (Exception ex) {
		    // some errors occurred
		    ex.printStackTrace();
		}


		//Decrypt the .SQL files 
		decryptfiles_Company_Restore("", "", unZip_Company_File_List_Company_Restore);

		if (validation_For_All_SQLCompany_File_Company_Restore()) {

		    // retrive all information of Company From database 
		    company_Full_InformationDTOList_Company_Restore = gen.other.CompanySettings.CompanySettingsDAO.getComapany_List("", "");

		    // function to read .SQL file and put database and FileName in MAP
		    map_Database_FileName_Company_Restore(unZip_Company_File_List_Company_Restore);

		    // drop Database for selected company for restore
		    gen.other.DatabaseSpiliting.DatabaseSplitingDAO.dropDatabases(company_InformationDTO_Final_List_Company_Restore);

		    // Create Database for selected company for restore
		    gen.other.DatabaseSpiliting.DatabaseSplitingDAO.createNewDatabase(company_InformationDTO_Final_List_Company_Restore);

		    // restore databse ..............
		    for (Company_InformationDTO company_InformationDTO_Company_Restore : company_InformationDTO_Final_List_Company_Restore) {
			String database = company_InformationDTO_Company_Restore.getCompany_Database_Name();
			String pathName = txtSourcePath_Company_Restore.getText().toString().trim();
			restoreDB_Company_Restore(database, "root", "adm", pathName + "/" + database + ".sql");
		    }


		    // Delete Extra Created .ENC files
		    for (int i = 0; i < unZip_Company_File_List_Company_Restore.size(); i++) {
			Path target5 = Paths.get(fileChooser_Company_Restore + "/" + unZip_Company_File_List_Company_Restore.get(i));
			if (Files.exists(target5)) {
			    Files.delete(target5);
			}
		    }


		    // Delete Extra Created .SQL files
		    for (int i = 0; i < company_SQLFile_List_Restore.size(); i++) {
			Path target5 = Paths.get(fileChooser_Company_Restore + "/" + company_SQLFile_List_Restore.get(i));
			if (Files.exists(target5)) {
			    Files.delete(target5);
			}
		    }

		    // Delete Extra Created .txt files
		    Path target5 = Paths.get(fileChooser_Company_Restore + "/" + "All_Database_information.txt");
		    if (Files.exists(target5)) {
			Files.delete(target5);
		    }

		    initialise_Company_Restore();
		}
	    }
	} catch (Exception ex) {
	    ex.printStackTrace();
	    Logger.getLogger(DatabaseRestore.class.getName()).log(Level.SEVERE, null, ex);
	}

    }//GEN-LAST:event_btnRestore_Company_RestoreActionPerformed

    private void txtSourcePath_Company_RestoreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSourcePath_Company_RestoreKeyPressed
	// TODO add your handling code here:
	
	initialise_Company_Restore();
	bindData2GUI_Company_Restore();
	
    }//GEN-LAST:event_txtSourcePath_Company_RestoreKeyPressed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
	// TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MouseClicked

    private void buttonFilePath_Company_RestoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonFilePath_Company_RestoreMouseClicked
	// TODO add your handling code here:
	JFileChooser chooser = new JFileChooser();
	chooser.setCurrentDirectory(new java.io.File("."));
	chooser.setDialogTitle("choosertitle");
	chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
	chooser.setAcceptAllFileFilterUsed(false);

	if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
	    fileChooser_Company_Restore = chooser.getSelectedFile();
	    txtSourcePath_Company_Restore.setText(fileChooser_Company_Restore + "");
	    txtSourcePath_Company_RestoreKeyPressed(null);
	} else {
	    System.out.println("No Selection ");
	}
    }//GEN-LAST:event_buttonFilePath_Company_RestoreMouseClicked

    private void buttonFilePath_Company_RestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFilePath_Company_RestoreActionPerformed
	// TODO add your handling code here:
	buttonFilePath_Company_RestoreMouseClicked(null);
    }//GEN-LAST:event_buttonFilePath_Company_RestoreActionPerformed

    private void tableCompanyRestoreUp_Company_RestoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCompanyRestoreUp_Company_RestoreMouseClicked
	// TODO add your handling code here:

	int selectedCompany_index = tableCompanyRestoreUp_Company_Restore.getSelectedRow();

	// selected company_Name
	String selectedCompany_Name = "" + tableCompanyRestoreUp_Company_Restore.getValueAt(selectedCompany_index, 0);
	
	// selected company_ID
	String selectedCompany_ID = "" + tableCompanyRestoreUp_Company_Restore.getValueAt(selectedCompany_index, 1);

	// selected row must be greater than 0 
	if (tableCompanyRestoreUp_Company_Restore.getSelectedRow() >= 0) {
	    // getRowCount row must be greater than 0 
	    if (tableCompanyRestoreUp_Company_Restore.getRowCount() > 0) {
		// find selected row from tableCompanyRestoreUp
		for (int i = 0; i < tableCompanyRestoreUp_Company_Restore.getRowCount(); i++) {
		    // selected Row
		    if (tableCompanyRestoreUp_Company_Restore.isRowSelected(i)) {
			// move data of selected row from tableCompanyRestoreUp to  tableCompanyList  
			tablemodelCompany_Company_Restore.setRowCount(tableCompanyList_Company_Restore.getRowCount() + 1);
			tableCompanyList_Company_Restore.setValueAt(selectedCompany_Name, tableCompanyList_Company_Restore.getRowCount() - 1, 0);
			tableCompanyList_Company_Restore.setValueAt(selectedCompany_ID, tableCompanyList_Company_Restore.getRowCount() - 1, 1);
			// remove row from table tableCompanyRestoreUp
			tablemodelRestoreCompany_Company_Restore.removeRow(i);
			// decrease value of i(row) as one row removed 
			i--;
		    }
		}
		if (tableCompanyRestoreUp_Company_Restore.getRowCount() > 0) {
		    tableCompanyRestoreUp_Company_Restore.requestFocus();
		    tableCompanyRestoreUp_Company_Restore.setRowSelectionInterval(0, 0);
		    tableCompanyList_Company_Restore.clearSelection();
		} else {
		    tableCompanyList_Company_Restore.requestFocus();
		    tableCompanyList_Company_Restore.setRowSelectionInterval(0, 0);
		}
	    }
	}

    }//GEN-LAST:event_tableCompanyRestoreUp_Company_RestoreMouseClicked

    private void tableCompanyList_Company_RestoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCompanyList_Company_RestoreMouseClicked
	// TODO add your handling code here:
	int selectedCompany_index = tableCompanyList_Company_Restore.getSelectedRow();

	// selected company_Name
	String selectedCompany_Name = "" + tableCompanyList_Company_Restore.getValueAt(selectedCompany_index, 0);
	// selected company_ID
	String selectedCompany_ID = "" + tableCompanyList_Company_Restore.getValueAt(selectedCompany_index, 1);

	// selected row must be greater than 0 
	if (tableCompanyList_Company_Restore.getSelectedRow() >= 0) {
	     // getRowCount row must be greater than 0 
	    if (tableCompanyList_Company_Restore.getRowCount() > 0) {
		// find selected row from tableCompanyList
		for (int i = 0; i < tableCompanyList_Company_Restore.getRowCount(); i++) {
		    // selected row
		    if (tableCompanyList_Company_Restore.isRowSelected(i)) {
			// move data of selected row from tableCompanyList to tableCompanyRestoreUp
			tablemodelRestoreCompany_Company_Restore.setRowCount(tableCompanyRestoreUp_Company_Restore.getRowCount() + 1);
			tableCompanyRestoreUp_Company_Restore.setValueAt(selectedCompany_Name, tableCompanyRestoreUp_Company_Restore.getRowCount() - 1, 0);
			tableCompanyRestoreUp_Company_Restore.setValueAt(selectedCompany_ID, tableCompanyRestoreUp_Company_Restore.getRowCount() - 1, 1);
			// remove row from table tableCompanyList
			tablemodelCompany_Company_Restore.removeRow(i);
			// decrease value of i(row) as one row removed 
			i--;
		    }
		}
		
		if (tableCompanyList_Company_Restore.getRowCount() > 0) {
		    tableCompanyList_Company_Restore.requestFocus();
		    tableCompanyList_Company_Restore.setRowSelectionInterval(0, 0);
		    tableCompanyRestoreUp_Company_Restore.clearSelection();
		} else {
		    tableCompanyRestoreUp_Company_Restore.requestFocus();
		    tableCompanyRestoreUp_Company_Restore.setRowSelectionInterval(0, 0);
		}
	    }
	}

    }//GEN-LAST:event_tableCompanyList_Company_RestoreMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRestore_Company_Restore;
    private javax.swing.JButton buttonFilePath_Company_Restore;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tableCompanyList_Company_Restore;
    private javax.swing.JTable tableCompanyRestoreUp_Company_Restore;
    private javax.swing.JTextField txtSourcePath_Company_Restore;
    // End of variables declaration//GEN-END:variables

    private void initialise_Company_Restore() {
	setActiveInactiveComponent_Company_Restore();
	intilisecomponent_Company_Restore();
	setnmenomics_Company_Restore();
    }

    private void setnmenomics_Company_Restore() {
	buttonFilePath_Company_Restore.setMnemonic(KeyEvent.VK_F);
	btnRestore_Company_Restore.setMnemonic(KeyEvent.VK_R);
    }

    private void setActiveInactiveComponent_Company_Restore() {
	jLabel2.setVisible(false);

	String col[] = {"CompanyName", ""};
	String data[][] = {{"", ""}};
	tablemodelCompany_Company_Restore = new DefaultTableModel(data, col) {
	    @Override
	    public boolean isCellEditable(int row, int column) {
		return false;//This causes all cells to be not editable
	    }
	};
	tableCompanyList_Company_Restore.setModel(tablemodelCompany_Company_Restore);
	JTableHeader header = tableCompanyList_Company_Restore.getTableHeader();
	header.setBackground(Color.yellow);
	tablemodelCompany_Company_Restore.setRowCount(0);
	tablemodelCompany_Company_Restore.setColumnCount(2);

	String col1[] = {"CompanyName", ""};
	String data1[][] = {{"", ""}};
	tablemodelRestoreCompany_Company_Restore = new DefaultTableModel(data1, col1) {
	    @Override
	    public boolean isCellEditable(int row, int column) {
		return false;//This causes all cells to be not editable
	    }
	};
	tableCompanyRestoreUp_Company_Restore.setModel(tablemodelRestoreCompany_Company_Restore);
	JTableHeader header1 = tableCompanyRestoreUp_Company_Restore.getTableHeader();
	header1.setBackground(Color.yellow);
	tablemodelRestoreCompany_Company_Restore.setRowCount(0);
	tablemodelRestoreCompany_Company_Restore.setColumnCount(2);

	setColumnWidth_Company_Restore(tableCompanyList_Company_Restore);
	setColumnWidth_Company_Restore(tableCompanyRestoreUp_Company_Restore);

    }

    private void intilisecomponent_Company_Restore() {
	company_List_Clicked_Company_Restore.clear();
	company_List_Restore_Company_Restore.clear();
	company_Database_List_Restore.clear();
	company_SQLFile_List_Restore.clear();
	company_Full_InformationDTOList_Company_Restore.clear();
	//map_Database_And_File_Name.clear();
	company_InformationDTOList_Company_Restore.clear();
	company_InformationDTO_Final_List_Company_Restore.clear();
	unZip_Company_File_List_Company_Restore.clear();

	setActiveInactiveComponent_Company_Restore();
    }

    private void bindData2GUI_Company_Restore() {
	if (validation_Company_Restore()) {
	    try {
		String zipFilePath = fileChooser_Company_Restore + "/ffdfdsgfd.abc";
		String destDirectory = "C:/Check";
		UnzipUtility unzipper = new UnzipUtility();
		try {
		    unZip_Company_File_List_Company_Restore = unzipper.unzip(zipFilePath, destDirectory);
		} catch (Exception ex) {
		    // some errors occurred
		    ex.printStackTrace();
		}


		// decryptfiles("D:/databasecheck/All_Database_information", ".enc");
		decryptfiles_Company_Restore(fileChooser_Company_Restore + "/" + "All_Database_information", ".enc", null);

		if (validation_For_All_SQLCompany_File_Company_Restore()) {
		    List<String> selected_List = new ArrayList<String>();
		    /// read Company Name present in file
		    BufferedReader brin;
		    brin = new BufferedReader(new FileReader(fileChooser_Company_Restore + "/" + "All_Database_information" + ".txt"));
		    String line = brin.readLine();
		    //   int count = 0;
		    while (line != null) {
			if (!line.equals("")) {
			    Company_InformationDTO company_InformationDTO = new Company_InformationDTO();
			    String databaseName = line;
			    String last_name = "";
			    StringTokenizer st = new StringTokenizer(databaseName, "$");
			    int i = 0;
			    while (st.hasMoreTokens() && i == 0) {
				last_name = st.nextToken();
				switch (i) {
				    case 0:
					company_InformationDTO.setCompany_Name(last_name);
					selected_List.add(last_name);
				    case 1:
					company_InformationDTO.setCompany_Database_Name(st.nextToken());
				    case 2:
					company_InformationDTO.setCompany_Unique_ID(st.nextToken());
				    case 3:
					company_InformationDTO.setCompany_SQL_File_Name(st.nextToken());
				}

				i++;
			    }
			    company_InformationDTOList_Company_Restore.add(company_InformationDTO);
			}
			line = brin.readLine();
		    }
		    brin.close();

		    int rowCount = 0;
		    tablemodelCompany_Company_Restore.setRowCount(rowCount);

//		    for (int i = 0; i < selected_List.size(); i++) {
//			if (!"information_schema".equalsIgnoreCase(selected_List.get(i)) && !"performance_schema".equalsIgnoreCase(selected_List.get(i))) {
//			    rowCount = tableCompanyList.getRowCount();
//			    tablemodelCompany_Company_Restore.setRowCount(rowCount + 1);
//			    tableCompanyList.setValueAt(selected_List.get(i), rowCount, 0);
//			    tableCompanyList.setValueAt(selected_List.get(i), rowCount, 1);
//			}
//		    }

		    for (Company_InformationDTO company_InformationDTO : company_InformationDTOList_Company_Restore) {
//			if (!"information_schema".equalsIgnoreCase(selected_List.get(i)) && !"performance_schema".equalsIgnoreCase(selected_List.get(i))) {
			rowCount = tableCompanyList_Company_Restore.getRowCount();
			tablemodelCompany_Company_Restore.setRowCount(rowCount + 1);
			tableCompanyList_Company_Restore.setValueAt(company_InformationDTO.getCompany_Name(), rowCount, 0);
			tableCompanyList_Company_Restore.setValueAt(company_InformationDTO.getCompany_Unique_ID(), rowCount, 1);
//			}
		    }



		    tableCompanyList_Company_Restore.requestFocus();
		    tableCompanyList_Company_Restore.changeSelection(0, 0, false, false);

		    // Delete Extra Created .ENC files
		    for (int i = 0; i < unZip_Company_File_List_Company_Restore.size(); i++) {
			Path target5 = Paths.get(fileChooser_Company_Restore + "/" + unZip_Company_File_List_Company_Restore.get(i));
			if (Files.exists(target5)) {
			    Files.delete(target5);
			}
		    }

		    // Delete Extra Created .txt files
		    Path target5 = Paths.get(fileChooser_Company_Restore + "/" + "All_Database_information" + ".txt");
		    if (Files.exists(target5)) {
			Files.delete(target5);
		    }
		}
	    } catch (Exception ex) {
		ex.printStackTrace();
		Logger.getLogger(DatabaseRestore.class.getName()).log(Level.SEVERE, null, ex);
	    }
	}
    }

    public static boolean restoreDB_Company_Restore(String dbName, String dbUserName, String dbPassword, String source) {

	String[] executeCmd = new String[]{"D:/MetalCopies/10-10-2013uploadcopy/server-Copy(2)/bin/mysql", "--user=" + dbUserName, "--password=" + dbPassword, dbName, "-e", "source " + source};
	Process runtimeProcess;
	try {

	    runtimeProcess = Runtime.getRuntime().exec(executeCmd);
	    int processComplete = runtimeProcess.waitFor();

	    if (processComplete == 0) {
		System.out.println("Backup restored successfully");
		return true;
	    } else {
		System.out.println("Could not restore the backup");
	    }
	} catch (Exception ex) {
	    ex.printStackTrace();
	}

	return false;
    }

    List<String> EncFiles_Company_Restore(File dir) {
	List<String> textFiles = new ArrayList<String>();
	if (dir.listFiles() != null) {
	    for (File file : dir.listFiles()) {
		if (file.getName().endsWith((".enc"))) {
		    textFiles.add(file.getName());
		}
	    }
	} else {
	    JOptionPane.showMessageDialog(this, "Enter valid path");
	}
	return textFiles;
    }

    List<String> TextFiles_Company_Restore(File dir) {
	List<String> textFiles = new ArrayList<String>();
	if (dir.listFiles() != null) {
	    for (File file : dir.listFiles()) {
		if (file.getName().endsWith((".txt"))) {
		    textFiles.add(file.getName());
		}
	    }
	} else {
	    JOptionPane.showMessageDialog(this, "Enter valid path");
	}
	return textFiles;
    }

    private void decryptfiles_Company_Restore(String calling, String Ext, List<String> unZip_Comapny_File_List) {
	try {
	    byte[] encoded = "1234567890098765".getBytes();
	    SecretKey key1 = new SecretKeySpec(encoded, "AES");
	    AlgorithmParameterSpec paramSpec = new IvParameterSpec(iv);
	    dcipher_Company_Restore = Cipher.getInstance("AES/CBC/PKCS5Padding");
	    dcipher_Company_Restore.init(Cipher.DECRYPT_MODE, key1, paramSpec);

	    if (calling.isEmpty()) {
		for (int i = 0; i < unZip_Comapny_File_List.size(); i++) {
		    String only_Company_File_Name = "";
		    StringTokenizer only_Company_File_Token = new StringTokenizer(unZip_Comapny_File_List.get(i), ".");
		    while (only_Company_File_Token.hasMoreTokens()) {
			only_Company_File_Name = only_Company_File_Token.nextToken();
			break;
		    }

		    company_SQLFile_List_Restore.add(only_Company_File_Name + ".sql");

		    if ((fileChooser_Company_Restore + "/" + unZip_Comapny_File_List.get(i).toString()).equals(fileChooser_Company_Restore + "/" + "All_Database_information.enc")) {
			decrypt_Company_Restore(new FileInputStream(fileChooser_Company_Restore + "/" + unZip_Comapny_File_List.get(i)), new FileOutputStream(fileChooser_Company_Restore + "/" + only_Company_File_Name + ".txt"));
		    } else {
			decrypt_Company_Restore(new FileInputStream(fileChooser_Company_Restore + "/" + unZip_Comapny_File_List.get(i)), new FileOutputStream(fileChooser_Company_Restore + "/" + only_Company_File_Name + ".sql"));
		    }
		}
	    } else {
		decrypt_Company_Restore(new FileInputStream(calling + Ext), new FileOutputStream(calling + ".txt"));
	    }
	} catch (FileNotFoundException e) {
	    e.printStackTrace();
	    System.out.println("File Not Found:" + e.getMessage());
	} catch (InvalidAlgorithmParameterException e) {
	    e.printStackTrace();
	    System.out.println("Invalid Alogorithm Parameter:" + e.getMessage());
	} catch (NoSuchAlgorithmException e) {
	    e.printStackTrace();
	    System.out.println("No Such Algorithm:" + e.getMessage());
	} catch (NoSuchPaddingException e) {
	    e.printStackTrace();
	    System.out.println("No Such Padding:" + e.getMessage());
	} catch (InvalidKeyException e) {
	    e.printStackTrace();
	    System.out.println("Invalid Key:" + e.getMessage());
	}
    }

    private static void decrypt_Company_Restore(InputStream is, OutputStream os) {
	try {
	    byte[] buf = new byte[1048576];
	    // bytes read from stream will be decrypted
	    CipherInputStream cis = new CipherInputStream(is, dcipher_Company_Restore);
	    // read in the decrypted bytes and write the clear text to out
	    int numRead = 0;
	    while ((numRead = cis.read(buf)) >= 0) {
		os.write(buf, 0, numRead);
	    }
	    // close all streams
	    cis.close();
	    is.close();
	    os.close();
	} catch (IOException e) {
	    e.printStackTrace();
	    System.out.println("I/O Error:" + e.getMessage());
	}
    }

    private void map_Database_FileName_Company_Restore(List<String> unZip_Company_File_List) {
	try {
	    /// read Company Name present in All Unzipe file one by one
	    BufferedReader brin;
	    for (int j = 0; j < unZip_Company_File_List.size(); j++) {

		// Not for All_Database_information.enc file
		if (!unZip_Company_File_List.get(j).equals("All_Database_information.enc")) {
		    String only_Company_File_Name = "";
		    // find FileName of SQL
		    StringTokenizer only_Company_File_Token = new StringTokenizer(unZip_Company_File_List.get(j), ".");
		    // find FileName of SQL and save in only_Company_File_Name
		    while (only_Company_File_Token.hasMoreTokens()) {
			only_Company_File_Name = only_Company_File_Token.nextToken();
			break;
		    }

		    // select the file 
		    brin = new BufferedReader(new FileReader(fileChooser_Company_Restore + "/" + only_Company_File_Name + ".sql"));
		    String line = brin.readLine();
		    int count = 0;

		    // Read the database present in .SQL file so read only first 5 rows by using count 
		    while (line != null && count < 5) {
			// if line is not empty
			if (!line.equals("")) {
			    String full_Line = line;
			    String dataBase_Name = "";
			    // if line is second then only read full line
			    if (count == 2) {
				StringTokenizer st = new StringTokenizer(full_Line, ":");
				while (st.hasMoreTokens()) {
				    dataBase_Name = st.nextToken();
				}

				// List from Databse
				for (CompanySettingsDTO company_NameandDatabaseDTO : company_Full_InformationDTOList_Company_Restore) {
				    // check Database Name from File and DAtabse is equal or not
				    if (company_NameandDatabaseDTO.getCompany_DatabaseName().equals(dataBase_Name.trim())) {
					// company_List_Restore_Company_Restore 
					for (CompanySettingsDTO companySettingsDTO : company_List_Restore_Company_Restore) {
					    // check Compamny Nmae and 
					    if (company_NameandDatabaseDTO.getCompany_name().trim().equals(companySettingsDTO.getCompany_name()) && company_NameandDatabaseDTO.getCompany_id().toString().trim().equals(companySettingsDTO.getCompany_id().toString())) {
						if (!dataBase_Name.isEmpty()) {
						    //    map_Database_And_File_Name.put(last_name, unZip_Company_File_List_Company_Restore.get(j));
						    Company_InformationDTO company_InformationDTO = new Company_InformationDTO();
						    company_InformationDTO.setCompany_Name(company_NameandDatabaseDTO.getCompany_name());
						    company_InformationDTO.setCompany_Database_Name(company_NameandDatabaseDTO.getCompany_DatabaseName());
						    company_InformationDTO.setCompany_SQL_File_Name(unZip_Company_File_List.get(j));
						    company_InformationDTO.setCompany_Unique_ID(company_NameandDatabaseDTO.getCompany_id().toString());
						    company_InformationDTO_Final_List_Company_Restore.add(company_InformationDTO);
						}
					    }
					}
				    }
				}
			    }
			}
			line = brin.readLine();
			count++;
		    }
		    brin.close();
		}
	    }
	} catch (FileNotFoundException ex) {
	    ex.printStackTrace();
	    Logger.getLogger(DatabaseRestore.class.getName()).log(Level.SEVERE, null, ex);
	} catch (IOException ex) {
	    ex.printStackTrace();
	    Logger.getLogger(DatabaseRestore.class.getName()).log(Level.SEVERE, null, ex);
	}
    }

    private Boolean validation_Company_Restore() {
	Boolean flag = true;
	if (!txtSourcePath_Company_Restore.getText().toString().trim().isEmpty()) {
	    Path target5 = Paths.get(fileChooser_Company_Restore + "/ffdfdsgfd.abc");
	    if (!Files.exists(target5)) {
		flag = false;
		JOptionPane.showMessageDialog(null, "Select Correct Path As No Company for Selection");
		buttonFilePath_Company_Restore.requestFocus();
	    }
	} else if (tableCompanyRestoreUp_Company_Restore.getRowCount() == 0 || tableCompanyRestoreUp_Company_Restore.getRowCount() < 0) {
	    flag = false;
	    JOptionPane.showMessageDialog(null, "Select Company First To Restore");
	    buttonFilePath_Company_Restore.requestFocus();
	} 
	return flag;
    }

    private Boolean validation_For_All_SQLCompany_File_Company_Restore() {
	Boolean flag = true;

	Path target5 = Paths.get(fileChooser_Company_Restore + "/" + "All_Database_information" + ".txt");
	if (!Files.exists(target5)) {
	    flag = false;
	    JOptionPane.showMessageDialog(null, "S                 for Selection");
	    buttonFilePath_Company_Restore.requestFocus();
	}
	return flag;
    }

    // set width to column of table
    private void setColumnWidth_Company_Restore(JTable passedTable) {
	DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
	rightRenderer.setHorizontalAlignment(JLabel.LEFT);

	DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
	centerRenderer.setHorizontalAlignment(JLabel.CENTER);

	passedTable.getColumnModel().getColumn(0).setCellRenderer(rightRenderer);
	passedTable.getColumnModel().getColumn(0).setPreferredWidth(0);
	passedTable.getColumnModel().getColumn(0).setMinWidth(350);
	passedTable.getColumnModel().getColumn(0).setMaxWidth(350);

	passedTable.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
	passedTable.getColumnModel().getColumn(1).setPreferredWidth(0);
	passedTable.getColumnModel().getColumn(1).setMinWidth(100);
	passedTable.getColumnModel().getColumn(1).setMaxWidth(100);

    }

//    public static void main(String... arg) {
//	DatabaseRestore a = new DatabaseRestore("");
//	a.setSize(1000, 1000);
//	a.setVisible(true);
//    }
}
