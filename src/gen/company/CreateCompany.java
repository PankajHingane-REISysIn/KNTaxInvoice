/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gen.company;

import gen.account.group.Group_Create;
import gen.account.ledger.Ledger_Create;
import java.sql.Connection;
import gen.database.connection.DatabaseConnection1;
import gen.database.connection.StartMysqlServer;
import gen.database.connection.StopMysqlServer1;
import gen.mainclass.MainClass;
import gen.mainclass.TempClassForImage;
import gen.other.login.NewUser;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.beans.PropertyVetoException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.WindowConstants;
import org.openide.explorer.view.IconView;

/**
 *
 * @author pc5
 */
public class CreateCompany extends javax.swing.JInternalFrame {

    private static int flag_new_user;
    private static Object desktopMain;
    ResultSet rs;
    final String dir = System.getProperty("user.dir");
    Image img = new ImageIcon(dir + "/images/").getImage();
    private String source = null;
    static int control = 0;
    byte[] b1;

    private static void setstaticvar() {
        throw new UnsupportedOperationException("Not yet implemented");
    }

    /**
     * Creates new form CreateCompany
     */
    public CreateCompany() {
        // btnLogout.checkImage(img, rootPane);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCompanyName = new javax.swing.JTextField();
        txtCompanyAlias = new javax.swing.JTextField();
        txtCompanyContact = new javax.swing.JTextField();
        txtCompanyMail = new javax.swing.JTextField();
        txtCompanyITN = new javax.swing.JTextField();
        txtCompanySTN = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCompanyAddress = new javax.swing.JTextArea();
        btncompanyClear = new javax.swing.JButton();
        btnCompanyCreate = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtCompanyDeclaration = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtCompanyTagLine = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtCompanyTermsConditions = new javax.swing.JTextArea();
        btnLogout = new javax.swing.JButton();
        txtNameOfGod = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtCompanySignature = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtCompanyCSTNo = new javax.swing.JTextField();
        jButtonUpdateLogo = new javax.swing.JButton();
        LogoPanelView = new javax.swing.JLabel();

        setClosable(true);
        setTitle(org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.title")); // NOI18N
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Symbol.png"))); // NOI18N
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameDeactivated(evt);
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.jLabel1.text")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.jLabel2.text")); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.jLabel3.text")); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.jLabel4.text")); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.jLabel5.text")); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.jLabel6.text")); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.jLabel7.text")); // NOI18N

        txtCompanyName.setText(org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.txtCompanyName.text")); // NOI18N
        txtCompanyName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanyNameFocusGained(evt);
            }
        });
        txtCompanyName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyNameKeyPressed(evt);
            }
        });

        txtCompanyAlias.setText(org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.txtCompanyAlias.text")); // NOI18N
        txtCompanyAlias.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanyAliasFocusGained(evt);
            }
        });
        txtCompanyAlias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyAliasKeyPressed(evt);
            }
        });

        txtCompanyContact.setText(org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.txtCompanyContact.text")); // NOI18N
        txtCompanyContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyContactKeyPressed(evt);
            }
        });

        txtCompanyMail.setText(org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.txtCompanyMail.text")); // NOI18N
        txtCompanyMail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanyMailFocusGained(evt);
            }
        });
        txtCompanyMail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyMailKeyPressed(evt);
            }
        });

        txtCompanyITN.setText(org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.txtCompanyITN.text")); // NOI18N
        txtCompanyITN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyITNKeyPressed(evt);
            }
        });

        txtCompanySTN.setText(org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.txtCompanySTN.text")); // NOI18N
        txtCompanySTN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanySTNKeyPressed(evt);
            }
        });

        txtCompanyAddress.setColumns(20);
        txtCompanyAddress.setRows(5);
        txtCompanyAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanyAddressFocusGained(evt);
            }
        });
        txtCompanyAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyAddressKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(txtCompanyAddress);

        org.openide.awt.Mnemonics.setLocalizedText(btncompanyClear, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.btncompanyClear.text")); // NOI18N
        btncompanyClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncompanyClearActionPerformed(evt);
            }
        });
        btncompanyClear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btncompanyClearKeyPressed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btnCompanyCreate, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.btnCompanyCreate.text")); // NOI18N
        btnCompanyCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompanyCreateActionPerformed(evt);
            }
        });
        btnCompanyCreate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCompanyCreateKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.jLabel8.text")); // NOI18N

        txtCompanyDeclaration.setColumns(20);
        txtCompanyDeclaration.setRows(5);
        txtCompanyDeclaration.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanyDeclarationFocusGained(evt);
            }
        });
        txtCompanyDeclaration.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyDeclarationKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(txtCompanyDeclaration);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.jLabel9.text")); // NOI18N

        txtCompanyTagLine.setColumns(20);
        txtCompanyTagLine.setRows(5);
        txtCompanyTagLine.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanyTagLineFocusGained(evt);
            }
        });
        txtCompanyTagLine.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyTagLineKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(txtCompanyTagLine);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.jLabel10.text")); // NOI18N

        txtCompanyTermsConditions.setColumns(20);
        txtCompanyTermsConditions.setRows(5);
        txtCompanyTermsConditions.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanyTermsConditionsFocusGained(evt);
            }
        });
        txtCompanyTermsConditions.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyTermsConditionsKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(txtCompanyTermsConditions);

        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logout.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(btnLogout, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.btnLogout.text")); // NOI18N
        btnLogout.setToolTipText(org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.btnLogout.toolTipText")); // NOI18N
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        txtNameOfGod.setText(org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.txtNameOfGod.text")); // NOI18N
        txtNameOfGod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameOfGodKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel11, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.jLabel11.text")); // NOI18N

        txtCompanySignature.setText(org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.txtCompanySignature.text")); // NOI18N
        txtCompanySignature.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanySignatureFocusGained(evt);
            }
        });
        txtCompanySignature.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanySignatureKeyPressed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel12, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.jLabel12.text")); // NOI18N

        txtCompanyCSTNo.setText(org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.txtCompanyCSTNo.text")); // NOI18N
        txtCompanyCSTNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyCSTNoKeyPressed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButtonUpdateLogo, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.jButtonUpdateLogo.text")); // NOI18N
        jButtonUpdateLogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateLogoActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(LogoPanelView, org.openide.util.NbBundle.getMessage(CreateCompany.class, "CreateCompany.LogoPanelView.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LogoPanelView, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButtonUpdateLogo)))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(txtCompanySignature, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(btncompanyClear, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(btnCompanyCreate)
                                .addGap(146, 146, 146)
                                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane4)
                                .addGap(92, 92, 92)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNameOfGod, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtCompanyContact, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCompanyMail, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCompanyAlias, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCompanySTN)
                                    .addComponent(txtCompanyITN)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtCompanyCSTNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(txtNameOfGod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1))
                    .addComponent(txtCompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCompanyAlias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel3)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCompanyContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCompanyMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCompanyITN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(txtCompanySTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtCompanyCSTNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel11))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtCompanySignature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btncompanyClear)
                            .addComponent(btnCompanyCreate)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(btnLogout))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(LogoPanelView, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonUpdateLogo)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btncompanyClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncompanyClearActionPerformed
        txtCompanyName.setText("");
        txtCompanyAddress.setText("");
        txtCompanyAlias.setText("");
        txtCompanyContact.setText("");
        txtCompanyITN.setText("");
        txtCompanyMail.setText("");
        txtCompanySTN.setText("");
        txtCompanyDeclaration.setText("");
        txtCompanyTagLine.setText("");
        txtCompanyCSTNo.setText("");
        txtCompanyTermsConditions.setText("");
        txtCompanySignature.setText("");

    }//GEN-LAST:event_btncompanyClearActionPerformed

    private void btnCompanyCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompanyCreateActionPerformed

        if (txtCompanyName.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Enter Name Of Company");
            txtCompanyName.requestFocus();
        } /*  else if(txtCompanyAlias.getText().trim().trim().equals(""))
         {
         // JOptionPane.showMessageDialog(null, "Enter Alias Of Company");
         txtCompanyAlias.requestFocus();
         }*/ /*  else if(txtCompanyAddress.getText().trim().trim().equals(""))
         {
         // JOptionPane.showMessageDialog(null, "Enter Address Of Company");
         txtCompanyAddress.requestFocus();
         }*/ /*  else if(txtCompanyContact.getText().trim().trim().equals(""))
         {
         //JOptionPane.showMessageDialog(null, "Enter Contact Details Of Company");
         txtCompanyContact.requestFocus();
         }*/ /*else if(txtCompanyMail.getText().trim().trim().equals(""))
         {
         // JOptionPane.showMessageDialog(null, "Enter E-MailID Of Company");
         txtCompanyMail.requestFocus();
         }*/ /*else if(txtCompanyITN.getText().trim().trim().equals(""))
         {
         //JOptionPane.showMessageDialog(null, "Enter Income Tax Number Of Company");
         txtCompanyITN.requestFocus();
         }*/ /*else if(txtCompanySTN.getText().trim().trim().equals(""))
         {
         // JOptionPane.showMessageDialog(null, "Enter Sales Tax Number Of Company");
         txtCompanySTN.requestFocus();
         }*/ else {
            txtCompanyName.transferFocus();
            int current = 0;
            Connection conn = null;
            try {


                conn = DatabaseConnection1.GetConnection();

                conn.setAutoCommit(false);
                Statement st = conn.createStatement();

                rs = st.executeQuery("select max(CompanyIndex) As id from tblcreatecompany");
                if (rs.next()) {
                    current = rs.getInt("id");
                }
                current = current + 1;
                // String contact=txtCompanyContact.getText().trim();
                // String ITN=txtCompanyITN.getText().trim();
                // String STN=txtCompanySTN.getText().trim();
                String sql = "insert into tblCreateCompany(CompanyIndex,Name,Alias,Address,ContactNo,EmailId,IncomeTaxNo,SaleTaxNo,Declaration,TagLine,TermCnditions,NameOfGod,SignAuthority,VatTinNo) values(" + current + ",'" + txtCompanyName.getText().trim() + "','" + txtCompanyAlias.getText().trim() + "','" + txtCompanyAddress.getText().trim() + "','" + txtCompanyContact.getText().trim() + "','" + txtCompanyMail.getText().trim() + "','" + txtCompanyITN.getText().trim() + "','" + txtCompanySTN.getText().trim() + "','" + txtCompanyDeclaration.getText().trim() + "','" + txtCompanyTagLine.getText().trim() + "','" + txtCompanyTermsConditions.getText().trim() + "','" + txtNameOfGod.getText().trim() + "','" + txtCompanySignature.getText().trim() + "','" + txtCompanyCSTNo.getText().trim() + "');";
                System.out.println("fgsfsdfdfsdfdsfdsfsf" + sql);
                st.executeUpdate(sql);
                //  rs=st.executeQuery("select CompanyIndex from tblcreatecompany");
                // while(rs.next())
                // { 

                JOptionPane.showMessageDialog(null, "Company Created Successfully...");
                conn.commit();

            } catch (Exception e) {
                System.out.println("Exception : " + e);
            }

        }







    }//GEN-LAST:event_btnCompanyCreateActionPerformed

    private void txtCompanyNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyNameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCompanyAlias.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtNameOfGod.requestFocus();
        }
    }//GEN-LAST:event_txtCompanyNameKeyPressed

    private void txtCompanyAliasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyAliasKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCompanyTagLine.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtCompanyName.requestFocus();
        }
    }//GEN-LAST:event_txtCompanyAliasKeyPressed

    private void txtCompanyAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyAddressKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCompanyContact.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtCompanyTagLine.requestFocus();
        }
    }//GEN-LAST:event_txtCompanyAddressKeyPressed

    private void txtCompanyContactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyContactKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCompanyMail.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtCompanyAddress.requestFocus();
        }
    }//GEN-LAST:event_txtCompanyContactKeyPressed

    private void txtCompanyMailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyMailKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCompanyITN.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtCompanyContact.requestFocus();
        }
    }//GEN-LAST:event_txtCompanyMailKeyPressed

    private void txtCompanyITNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyITNKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCompanySTN.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtCompanyMail.requestFocus();
        }
    }//GEN-LAST:event_txtCompanyITNKeyPressed

    private void txtCompanySTNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanySTNKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCompanyCSTNo.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtCompanyITN.requestFocus();
        }
    }//GEN-LAST:event_txtCompanySTNKeyPressed

    private void txtCompanyDeclarationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyDeclarationKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCompanyTermsConditions.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtCompanyCSTNo.requestFocus();
        }
    }//GEN-LAST:event_txtCompanyDeclarationKeyPressed

    private void txtCompanyTagLineKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyTagLineKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCompanyAddress.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtCompanyAlias.requestFocus();
        }
    }//GEN-LAST:event_txtCompanyTagLineKeyPressed

    private void btnCompanyCreateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCompanyCreateKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnCompanyCreateActionPerformed(null);
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            btncompanyClear.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtCompanySignature.requestFocus();
        }
    }//GEN-LAST:event_btnCompanyCreateKeyPressed

    private void btncompanyClearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btncompanyClearKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btncompanyClearActionPerformed(null);
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            btnCompanyCreate.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtCompanySignature.requestFocus();
        }
    }//GEN-LAST:event_btncompanyClearKeyPressed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        btnCompanyCreate.setMnemonic(KeyEvent.VK_C);
        btncompanyClear.setMnemonic(KeyEvent.VK_L);

//        FileInputStream fin = null;
//        try {
//
//            final String dir = System.getProperty("user.dir");
//
//            Connection conn = DatabaseConnection1.GetConnection();
//            Statement st = conn.createStatement();
//            File f1 = new File(dir + "");
//            fin = new FileInputStream(f1);
//            //DataInputStream dataIs = new DataInputStream(new FileInputStream(f1));
//            //       PreparedStatement pst = conn.prepareStatement("insert into registration(image) values(?)");
//            //pst.setInt(1,67);
//            //        pst.setBinaryStream(1,fin,fin.available());
//            //        pst.executeUpdate();
//            //int length=(int)f1.length();
//            byte[] b1 = new byte[(int) f1.length()];
//            fin.read(b1);
//            fin.close();
//            st.executeUpdate("insert into registration(image) values('" + b1 + "')");
//            System.out.println("Quesry Executed Successfully");
//            FileOutputStream fout = new FileOutputStream("");
//
//
//
//            fout.write(b1);
//            fout.close();
//            //    java.awt.Image img;
//            String q = "select * from registration";
//            ResultSet rs = st.executeQuery(q);
//
//            while (rs.next()) {
//                byte[] imgdata = rs.getBytes("image");
//                Image img = Toolkit.getDefaultToolkit().createImage(imgdata);
//                Image img1 = new ImageIcon(imgdata).getImage();
//                ImageIcon icon = new ImageIcon(img);
//
//            }
//            LogoPanel.setBorder(new TempClassForImage(img, LogoPanel.getSize()));
//
//
//        } catch (IOException ex) {
//            Logger.getLogger(CreateCompany.class.getName()).log(Level.SEVERE, null, ex);
//        } /*catch (FileNotFoundException ex) {
//         Logger.getLogger(CreateCompany.class.getName()).log(Level.SEVERE, null, ex);
//         }*/ catch (SQLException ex) {
//            Logger.getLogger(CreateCompany.class.getName()).log(Level.SEVERE, null, ex);
//        } finally {
//            try {
//                fin.close();
//            } catch (IOException ex) {
//                Logger.getLogger(CreateCompany.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
    }//GEN-LAST:event_formInternalFrameOpened

    private void txtCompanyTermsConditionsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyTermsConditionsKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCompanySignature.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtCompanyDeclaration.requestFocus();
        }
    }//GEN-LAST:event_txtCompanyTermsConditionsKeyPressed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed

        formWindowClosing(null);





    }//GEN-LAST:event_btnLogoutActionPerformed

    private void txtCompanySignatureKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanySignatureKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnCompanyCreate.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtCompanyTermsConditions.requestFocus();
        }
    }//GEN-LAST:event_txtCompanySignatureKeyPressed

    private void txtNameOfGodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameOfGodKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCompanyName.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            try {
                this.setClosed(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(CreateCompany.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtNameOfGodKeyPressed

    private void txtCompanyCSTNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyCSTNoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCompanyDeclaration.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtCompanySTN.requestFocus();
        }
    }//GEN-LAST:event_txtCompanyCSTNoKeyPressed

    private void txtCompanyNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanyNameFocusGained
        // TODO add your handling code here:
        txtCompanyName.selectAll();
    }//GEN-LAST:event_txtCompanyNameFocusGained

    private void txtCompanyAliasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanyAliasFocusGained
        // TODO add your handling code here:
        txtCompanyAlias.selectAll();
    }//GEN-LAST:event_txtCompanyAliasFocusGained

    private void txtCompanyTagLineFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanyTagLineFocusGained
        // TODO add your handling code here:
        txtCompanyTagLine.selectAll();
    }//GEN-LAST:event_txtCompanyTagLineFocusGained

    private void txtCompanyAddressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanyAddressFocusGained
        // TODO add your handling code here:
        txtCompanyAddress.selectAll();
    }//GEN-LAST:event_txtCompanyAddressFocusGained

    private void txtCompanyMailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanyMailFocusGained
        // TODO add your handling code here:
        txtCompanyMail.selectAll();
    }//GEN-LAST:event_txtCompanyMailFocusGained

    private void txtCompanyDeclarationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanyDeclarationFocusGained
        // TODO add your handling code here:
        txtCompanyDeclaration.selectAll();
    }//GEN-LAST:event_txtCompanyDeclarationFocusGained

    private void txtCompanyTermsConditionsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanyTermsConditionsFocusGained
        // TODO add your handling code here:
        txtCompanyTermsConditions.selectAll();
    }//GEN-LAST:event_txtCompanyTermsConditionsFocusGained

    private void txtCompanySignatureFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanySignatureFocusGained
        // TODO add your handling code here:
        txtCompanySignature.selectAll();
    }//GEN-LAST:event_txtCompanySignatureFocusGained

    private void jButtonUpdateLogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateLogoActionPerformed
        // TODO add your handling code here:
        control = 1;
        int dialogButton1 = JOptionPane.YES_NO_OPTION;
        int dialogResult1 = JOptionPane.showConfirmDialog(this, "Your Current Logo Will Be Removed,Do You Want To Proceed ?", "Warning", dialogButton1);
        if (dialogResult1 == 0) {

            imageloading o = new imageloading();
            o.setVisible(true);

            if (control == 1) {
                Connection conn = DatabaseConnection1.GetConnection();
                FileInputStream fin = null;
                try {
                    BufferedImage mImage;
                    final String dir = System.getProperty("user.dir");
                    File imgfile = new File(source);
                    fin = new FileInputStream(imgfile);
                    
                    PreparedStatement pre1 = conn.prepareStatement("insert into registration values(?)");
                    pre1.setBinaryStream(1, fin, (int) imgfile.length());
                    pre1.executeUpdate();
                    System.out.println("Successfully inserted the file into the database!");
                    
                    pre1.close();
                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(CreateCompany.class.getName()).log(Level.SEVERE, null, ex);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(CreateCompany.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        fin.close();
                    } catch (IOException ex) {
                        Logger.getLogger(CreateCompany.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        } else {
            formInternalFrameActivated(null);
        }
    }//GEN-LAST:event_jButtonUpdateLogoActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
        control = 0;
        try {
            // TODO add your handling code here:
            this.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(ViewEditCompany.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formInternalFrameActivated

    private void formInternalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameDeactivated
        // TODO add your handling code here:
        control = 1;
    }//GEN-LAST:event_formInternalFrameDeactivated

    private void btnCompanyCreate_BackActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            MainClass m = new MainClass();
            m.menuselection(6);
            this.setClosed(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(Ledger_Create.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LogoPanelView;
    private javax.swing.JButton btnCompanyCreate;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btncompanyClear;
    private javax.swing.JButton jButtonUpdateLogo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea txtCompanyAddress;
    private javax.swing.JTextField txtCompanyAlias;
    private javax.swing.JTextField txtCompanyCSTNo;
    private javax.swing.JTextField txtCompanyContact;
    private javax.swing.JTextArea txtCompanyDeclaration;
    private javax.swing.JTextField txtCompanyITN;
    private javax.swing.JTextField txtCompanyMail;
    private javax.swing.JTextField txtCompanyName;
    private javax.swing.JTextField txtCompanySTN;
    private javax.swing.JTextField txtCompanySignature;
    private javax.swing.JTextArea txtCompanyTagLine;
    private javax.swing.JTextArea txtCompanyTermsConditions;
    private javax.swing.JTextField txtNameOfGod;
    // End of variables declaration//GEN-END:variables

    /*  private void formWindowClosing(Object object) {
     int dialogButton = JOptionPane.YES_NO_OPTION;
     int dialogResult = JOptionPane.showConfirmDialog(this, "Do you want to Close the Application?", "Warning", dialogButton);
     if (dialogResult == 0) {
     //MainClass2 m=new MainClass();
     /*
     * Stop mysql server
     */
    /*  StopMysqlServer1 stopMysqlServer = new StopMysqlServer1();
     stopMysqlServer.start();
          
          
            
     // Thread t = new Thread(this);
     //   t.start();
     } else {
     //menuGroup.doClick();
     }  
     }*/
    private void formWindowClosing(Object object) {

        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Do you want to Close the Application?", "Warning", dialogButton);
        if (dialogResult == 0) {
            //MainClass2 m=new MainClass();
//            /*
//             * Stop mysql server
//             */
//
//            StopMysqlServer1 stopMysqlServer = new StopMysqlServer1();
//            stopMysqlServer.start();
//            System.exit(0);


            //  Thread t = new Thread(this);
            //    t.start();
        }

    }

    public final class imageloading extends javax.swing.JInternalFrame {

        BufferedImage mImage;
        Image scaledImage = null;
        ImageIcon scaledImageIcon = null;
        String name, name1;

        public imageloading() {
            //JFrame frm=new JFrame("image loading test");
            source = filechoose();
            System.out.println("ViewEditCompany----->>imageloading -->>source: " + source);
            File inputFile = new File(source);
            try {
                mImage = ImageIO.read(inputFile);
            } catch (IOException ex) {
                //Logger.getLogger(index.class.getName()).log(Level.SEVERE, null, ex);
            }

            scaledImage = mImage.getScaledInstance(LogoPanelView.getWidth(), LogoPanelView.getHeight(), Image.SCALE_SMOOTH);
            scaledImageIcon = new ImageIcon(scaledImage);
            FileInputStream fin = null;
            try {

                final String dir = System.getProperty("user.dir");

                Connection conn = DatabaseConnection1.GetConnection();
                Statement st = conn.createStatement();



                File f1 = new File(source);//new File(dir + "/images/unnati_hinges_packing1_1.jpg");

                fin = new FileInputStream(f1);

                b1 = new byte[(int) f1.length()];
                fin.read(b1);
                fin.close();

                //  int ret = st.executeUpdate("insert into registration(image) values('"+b1+"')");
                // System.out.println("ViewEditCompany----->>imageloading -->>return: "+ ret);
            } catch (Exception e) {
                System.out.println("Exception for---->>Image--->" + e);
            }
//    int x=Integer.parseInt(""+LogoPanelView.getAlignmentX());
//    int y=Integer.parseInt(""+LogoPanelView.getAlignmentY());
//    
//    int h=mImage.getTileHeight();
//    int w=mImage.getTileWidth();

            //LogoPanelView.setBorder(new TempClassForImage(scaledImage,LogoPanelView.getSize()));
            LogoPanelView.setIcon(scaledImageIcon);
            // LogoPanelView.setBounds(x, y, w, h);
            LogoPanelView.show();


        }

        String filechoose() {
            JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new File("."));

            chooser.setFileFilter(new javax.swing.filechooser.FileFilter() {
                public boolean accept(File f) {
                    name = f.getName().toLowerCase();
                    return name.endsWith(".gif") || name.endsWith(".jpg")
                            || name.endsWith(".jpeg") || f.isDirectory();
                }

                public String getDescription() {
                    return "Image files";
                }
            });

            int r = chooser.showOpenDialog(this);



            if (r == JFileChooser.APPROVE_OPTION) {
                name1 = chooser.getSelectedFile().getAbsolutePath();
                StringBuffer sb = new StringBuffer();
                sb.append(name1);

                int l = sb.length();
                for (int i = 0; i < l; i++) {
                    if (sb.charAt(i) == '\\') {
                        sb.insert(i, "\\");
                        i++;
                    }
                }
            }

            return name1;
        }
    }
}
