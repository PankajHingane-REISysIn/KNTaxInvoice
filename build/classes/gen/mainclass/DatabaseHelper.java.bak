/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gen.mainclass;

import gen.database.connection.DatabaseConnection1;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author pc5
 */
public class DatabaseHelper {

    public static void createCompanyDatabase(String companyDatase) {
        try {
            gen.other.CompanySettings.CompanysSettings.CURRENT_DATABASE_Company_Settings = companyDatase;
            Connection conn = DatabaseConnection1.GetConnection();
            Statement s = conn.createStatement();

//            s.execute("Alter table tblledger add column applicable_From_date date");
//            s.execute("update tblledger set  applicable_From_date ='2013-1-1' ");
//            s.execute("Alter table tblledger add column isdeletable int");
//
//            s.execute("Alter table tblstockitem add column applicable_From_date date");
//            s.execute("update tblstockitem set  applicable_From_date ='2013-1-1' ");

            // on date 14-04-2014 By Atul
//            s.execute("alter table tbltransactionvat  Add column  tax_type varchar(100)");
//
//            s.execute(" alter table tbltransactionotherdetails Add column trans_oc_No varchar(200) ");
//            s.execute(" alter table tbltransactionotherdetails Add column trans_oc_Date varchar(200) ");
//            s.execute(" alter table tbltransactionotherdetails Add column trans_date_Iss varchar(200) ");
//            s.execute(" alter table tbltransactionotherdetails Add column trans_Time_Iss varchar(200) ");
//            s.execute(" alter table tbltransactionotherdetails Add column trans_date_Rem varchar(200) ");
//            s.execute(" alter table tbltransactionotherdetails Add column trans_Time_Rem varchar(200)");

//            s.execute(" alter table tblInventoryTransactionItems Add column invtrans_package varchar(200) ");
//            s.execute(" alter table tblInventoryTransactionItems Add column invtrans_nos decimal(20,2) ");
//            s.execute(" alter table tblInventoryTransactionItems Add column invtrans_stk_under int ");
//            s.execute(" alter table tblInventoryTransactionItems Add FOREIGN KEY(invtrans_stk_under) REFERENCES tblstockgroup (sg_id)  ");


            //updated on 26-04-2014 by Atul
//            s.execute("create table tblreceiptperiod (receiptperiod_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, PRIMARY KEY (receiptperiod_id),  fromdate date , todate date)");
//            s.execute("alter table tblaccountvouchersmaxid Add  receiptperiod_id int ");
//            s.execute("alter table tblaccountvouchersmaxid Add  foreign key(receiptperiod_id) references tblreceiptperiod(receiptperiod_id)");

//            /*
            // Added on  28-01-2014
            s.execute("create table registration (image Blob)");
            s.execute("create table tblbackup (email_backup_date date,drive_backup_date date,email_backup_time time,drive_backup_time time)");
            s.execute("create table tblbackupsetting (email_backup int,drive_backup int,backup_on_exit int, username varchar(100) , drive_backup_path varchar(800))");
            s.execute("create table tblreceiptperiod (receiptperiod_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, PRIMARY KEY (receiptperiod_id),  fromdate date , todate date)");
            s.execute("CREATE TABLE tblaccountvouchersmaxid (salemaxid int DEFAULT NULL,purchasemaxid int DEFAULT NULL,receiptmaxid int DEFAULT NULL,paymentmaxid int DEFAULT NULL,challanmaxid int DEFAULT NULL,journalmaxid int DEFAULT NULL,contramaxid int DEFAULT NULL,pomaxid int DEFAULT NULL,grnotemaxid int DEFAULT NULL,field5 int DEFAULT NULL , receiptperiod_id int , foreign key(receiptperiod_id) references tblreceiptperiod(receiptperiod_id))");
            s.execute("insert into tblaccountvouchersmaxid (salemaxid,purchasemaxid, receiptmaxid,paymentmaxid,challanmaxid,contramaxid,pomaxid,grnotemaxid) values(0,0,0,0,0,0,0,0)");

            s.execute("CREATE TABLE tbladsumudisettings (name varchar(40) DEFAULT NULL,value int DEFAULT NULL)");
            s.execute(" insert into tbladsumudisettings values('pagination','50')");

            //	    s.execute("  Create table tblcompanyinfo ( company_id    int  GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null  ,primary key (company_id) , company_name  varchar(500), company_database  varchar(500) , created_by     varchar(500) , modified_by    varchar(500) , created_date    date , modified_date   date , Alias   varchar(100) , Address    varchar(500) , ContactNo   varchar(100) , EmailId   varchar(200) , IncomeTaxNo   varchar(60) , SaleTaxNo    varchar(60)  , Declaration   varchar(800) , TagLine     varchar(700) , TermCnditions   varchar(1000) , NameOfGod   varchar(200) , SignAuthority    varchar(200) , VatTinNo   varchar(60) , Note    varchar(500), LBTNo   varchar(60) , Field1   varchar(60) , Field2   varchar(60) )");
            s.execute("  Create table TBLCOMPANYINFO(COMPANY_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,COMPANY_NAME VARCHAR(500) DEFAULT NULL,COMPANY_DATABASE VARCHAR(500) DEFAULT NULL,CREATED_BY VARCHAR(500) DEFAULT NULL,MODIFIED_BY VARCHAR(500) DEFAULT NULL,CREATED_DATE DATE DEFAULT NULL,MODIFIED_DATE DATE DEFAULT NULL,ALIAS VARCHAR(100) DEFAULT NULL,ADDRESS VARCHAR(500) DEFAULT NULL,CONTACTNO VARCHAR(100) DEFAULT NULL,EMAILID VARCHAR(200) DEFAULT NULL,INCOMETAXNO VARCHAR(60) DEFAULT NULL,SALETAXNO VARCHAR(60) DEFAULT NULL,DECLARATION VARCHAR(800) DEFAULT NULL,TAGLINE VARCHAR(700) DEFAULT NULL,TERMCNDITIONS VARCHAR(1000) DEFAULT NULL,NAMEOFGOD VARCHAR(200) DEFAULT NULL,SIGNAUTHORITY VARCHAR(200) DEFAULT NULL,VATTINNO VARCHAR(60) DEFAULT NULL,NOTE VARCHAR(500) DEFAULT NULL,LBTNO VARCHAR(60) DEFAULT NULL,FIELD1 VARCHAR(60) DEFAULT NULL,FIELD2 VARCHAR(60) DEFAULT NULL , applicable_From_date date)");
            s.execute("  CREATE TABLE tbllogin (username varchar(60) NOT NULL,password varchar(60) DEFAULT NULL,new_entry int DEFAULT NULL,acc_vouchers int DEFAULT NULL,report int DEFAULT NULL,production int DEFAULT NULL,user_type int DEFAULT NULL,email_id varchar(80) DEFAULT NULL,email_pass varchar(60) DEFAULT NULL,PRIMARY KEY (username))");
            s.execute("  CREATE TABLE tblcurrentlogin (username varchar(80) DEFAULT NULL, FOREIGN KEY (username) REFERENCES tbllogin (username))");

            s.execute("  CREATE TABLE tblgroup (group_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, PRIMARY KEY (group_id), group_name varchar(40) DEFAULT NULL,group_under int DEFAULT NULL,  group_alias varchar(40) DEFAULT NULL,  group_isDeletable tinyint DEFAULT NULL,  created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  modified_user int DEFAULT NULL,  created_user int DEFAULT NULL ) ");
            s.execute("INSERT INTO tblgroup VALUES (50,'Primary',NULL,NULL,NULL,NULL,NULL,NULL,NULL),(54,'Current Liability',50,'',NULL,NULL,NULL,NULL,NULL),(55,'Current Assets',50,'',NULL,NULL,NULL,NULL,NULL),(56,'Suspense Account',50,'',NULL,NULL,NULL,NULL,NULL),(57,'Sundry Debtors',55,'',NULL,NULL,NULL,NULL,NULL),(58,'Sundry Creditors',54,'',NULL,NULL,NULL,NULL,NULL),(59,'Stock-In-Hand',55,'',NULL,NULL,NULL,NULL,NULL),(60,'Sales Account',50,'',NULL,NULL,NULL,NULL,NULL),(61,'Purchase Account',50,'',NULL,NULL,NULL,NULL,NULL),(62,'Loan Liability',50,'',NULL,NULL,NULL,NULL,NULL),(63,'Loans and Advances',55,'',NULL,NULL,NULL,NULL,NULL),(64,'Indirect Expenses',50,'',NULL,NULL,NULL,NULL,NULL),(65,'Indirect Income',50,'',NULL,NULL,NULL,NULL,NULL),(66,'Income (Direct)',50,'',NULL,NULL,NULL,NULL,NULL),(67,'Income (Indirect)',50,'',NULL,NULL,NULL,NULL,NULL),(68,'Expense (Direct)',50,'',NULL,NULL,NULL,NULL,NULL),(69,'Expense (Indirect)',50,'',NULL,NULL,NULL,NULL,NULL),(70,'Bank Account',55,'',NULL,NULL,NULL,NULL,NULL),(71,'Cash In Hand',55,'',NULL,NULL,NULL,NULL,NULL),(72,'Duties and Taxes',54,'',NULL,NULL,NULL,NULL,NULL),(73,'Capital Account',50,'',NULL,NULL,NULL,NULL,NULL);");

            s.execute(" CREATE TABLE tbltransactionmain (trans_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,trans_receiptNo int DEFAULT NULL, trans_date date DEFAULT NULL,  trans_typeIndex int DEFAULT NULL,  trans_narration varchar(1000) DEFAULT NULL,  trans_grandtotal decimal(40,2) DEFAULT NULL,  trans_transport int DEFAULT NULL,  trans_lessBillAmt decimal(40,2) DEFAULT NULL,  trans_payment varchar(40) DEFAULT NULL,  created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  created_user int DEFAULT NULL,  modified_user int DEFAULT NULL,  PRIMARY KEY (trans_id))");
            s.execute(" CREATE TABLE tblinventorytransaction ( invtrans_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  trans_id int DEFAULT NULL,  invtrans_type int DEFAULT NULL,  dat date DEFAULT NULL,  PRIMARY KEY (invtrans_id), FOREIGN KEY (trans_id) REFERENCES tbltransactionmain (trans_id))");

            s.execute(" CREATE TABLE tblstockgroup ( sg_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, sg_name varchar(60) DEFAULT NULL,  sg_alias varchar(40) DEFAULT NULL,  sg_under int DEFAULT NULL,  sg_lbtpercent decimal(20,2) DEFAULT NULL, created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  created_user int DEFAULT NULL,  modified_user int DEFAULT NULL,PRIMARY KEY (sg_id))");
            s.execute("insert into tblStockGroup(sg_name,sg_alias,sg_under) values('Primary','',0)");

            s.execute("  CREATE TABLE tblstockitemtype(type_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,type_name varchar(40) DEFAULT NULL,PRIMARY KEY (type_id)) ");

            s.execute("  CREATE TABLE tbluomtype ( uomType_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  uomType_name varchar(40) DEFAULT NULL,  PRIMARY KEY (uomType_id))");
            s.execute("INSERT INTO tbluomtype VALUES (1,'Simple'),(2,'Complex')");

            s.execute("  CREATE TABLE tblunitofmeasure(  uomType_id int NOT NULL,  uom_type varchar(50) DEFAULT NULL,  uom_symbol varchar(50) DEFAULT NULL,  uom_formalName varchar(50) DEFAULT NULL,  uom_noOfDecimalPts int DEFAULT NULL,  uom_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  PRIMARY KEY (uom_id),  FOREIGN KEY (uomType_id) REFERENCES tbluomtype (uomType_id))");

            //By Sudeep
            //s.execute("CREATE TABLE tblcatalogstockitem(si_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,PRIMARY KEY (si_id), si_name varchar(60) DEFAULT NULL, si_alias varchar(60) DEFAULT NULL, si_under int DEFAULT NULL, si_unitofmeasure int DEFAULT NULL, si_rate decimal(40,2) DEFAULT NULL)");

            //By Sudeep
            s.execute("CREATE TABLE tblCategory(category_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, category_name varchar(60) DEFAULT NULL, PRIMARY KEY(category_id))");

            //By Sudeep
            s.execute("CREATE TABLE tblcolor(color_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, color_name varchar(60) DEFAULT NULL, PRIMARY KEY (color_id))");
//            s.execute("INSERT INTO tblcolor VALUES (1,'Ajanta Black'),(2,'Ajanta White'),(3,'Ajanta Yellow'),(4,'Ajanta Gold'),(5,'Ash White'),(6,'White Fabric'),(7,'Black Fabric'),(8,'Pink Fabric'),(9,'White Silk'),(10,'Vento Black'),(11,'Black Gold'),(12,'White Bamboo'),(13,'Black Silver'),(14,'White Silver'),(15,'White Gold'),(16,'Emerald'),(17,'Firebrick'),(18,'Forest green'),(19,'Gold'),(20,'Green'),(21,'Gray'),(22,'Hollywood'),(23,'Indigo'),(24,'Ivory'),(25,'Jade'),(26,'Khaki'),(27,'Lavender'),(28,'Lemon'),(29,'Lime'),(30,'Magenta'),(31,'Maroon'),(32,'Mint green'),(33,'Mustard'),(34,'Navy Blue'),(35,'Olive'),(36,'Orange'),(37,'Orchid'),(38,'Pink'),(39,'Platinum'),(40,'Purple'),(41,'Quartz Grey'),(42,'Red'),(43,'Ruby'),(44,'Saffron'),(45,'Silver'),(46,'Titanium'),(47,'Ultramarine'),(48,'Violet'),(49,'Wheat'),(50,'White'),(51,'Xanthic'),(52,'Yellow'),(53,'Zucchini')");
            s.execute("INSERT INTO tblcolor VALUES (1,'Ajanta Black'),(2,'Ajanta White'),(3,'Ajanta Yellow'),(4,'Ajanta Gold'),(5,'Ash White'),(6,'White Fabric'),(7,'Black Fabric'),(8,'Pink Fabric'),(9,'White Silk'),(10,'Vento Black'),(11,'Black Gold'),(12,'White Bamboo'),(13,'Black Silver'),(14,'White Silver'),(15,'White Gold')");

            //By Sudeep
            s.execute("CREATE TABLE tblfinishtype(f_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null ,finishtype_name varchar(60) DEFAULT NULL, PRIMARY KEY(f_id))");

            //By Sudeep
            s.execute("CREATE TABLE tbltype(typeid int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, PRIMARY KEY(typeid) ,typename varchar(60) DEFAULT NULL)");

            //By Sudeep
            //s.execute("  CREATE TABLE tblstockitem(si_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  si_alias varchar(60) DEFAULT NULL,  si_under int DEFAULT NULL,  si_length decimal(40,2) DEFAULT NULL,  si_width decimal(40,2) DEFAULT NULL,  si_thickness decimal(40,2) DEFAULT NULL,  si_rate decimal(40,2) DEFAULT NULL,  si_unitOfMeasure int DEFAULT NULL,  si_openingBalance decimal(40,2) DEFAULT NULL,  si_unit varchar(40) DEFAULT NULL,  si_type int DEFAULT NULL,  si_name varchar(100) DEFAULT NULL,  created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  created_user int DEFAULT NULL,  modified_user int DEFAULT NULL, PRIMARY KEY (si_id),  FOREIGN KEY (si_under) REFERENCES tblstockgroup (sg_id), FOREIGN KEY (si_type) REFERENCES tblstockitemtype (type_id),  FOREIGN KEY (si_unitOfMeasure) REFERENCES tblunitofmeasure (uom_id))");
            //            s.execute("  CREATE TABLE tblstockitem(si_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  si_alias varchar(60) DEFAULT NULL,  si_under int DEFAULT NULL,  si_length decimal(40,2) DEFAULT NULL,  si_width decimal(40,2) DEFAULT NULL,  si_thickness decimal(40,2) DEFAULT NULL,  si_color int DEFAULT NULL ,si_rate decimal(40,2) DEFAULT NULL,  si_unitOfMeasure int DEFAULT NULL,  si_openingBalance decimal(40,2) DEFAULT NULL,  si_sizeA decimal(40,2) DEFAULT NULL,si_sizeB decimal(40,2) DEFAULT NULL,si_package varchar(40) DEFAULT NULL,si_numbers int DEFAULT NULL,si_unit varchar(40) DEFAULT NULL,  si_type int DEFAULT NULL,  si_name varchar(100) DEFAULT NULL,  created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  created_user int DEFAULT NULL,  modified_user int DEFAULT NULL, PRIMARY KEY (si_id),  FOREIGN KEY (si_under) REFERENCES tblstockgroup (sg_id), FOREIGN KEY (si_type) REFERENCES tblstockitemtype (type_id),  FOREIGN KEY (si_unitOfMeasure) REFERENCES tblunitofmeasure (uom_id), FOREIGN KEY (si_color) REFERENCES tblcolor (color_id))");
            //            s.execute("  CREATE TABLE tblstockitem(si_id int not null,PRIMARY KEY(si_id),  si_alias varchar(60) DEFAULT NULL,  si_under int DEFAULT NULL,  si_length decimal(40,2) DEFAULT NULL,  si_width decimal(40,2) DEFAULT NULL,  si_thickness decimal(40,2) DEFAULT NULL,  si_color int DEFAULT NULL ,si_rate decimal(40,2) DEFAULT NULL,  si_unitOfMeasure int DEFAULT NULL,  si_openingBalance decimal(40,2) DEFAULT NULL,  si_sizeA decimal(40,2) DEFAULT NULL,si_sizeB decimal(40,2) DEFAULT NULL,si_package varchar(40) DEFAULT NULL,si_numbers int DEFAULT NULL,si_unit varchar(40) DEFAULT NULL,  si_type int DEFAULT NULL,  si_name varchar(100) DEFAULT NULL,  created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  created_user int DEFAULT NULL,  modified_user int DEFAULT NULL,  FOREIGN KEY (si_id) REFERENCES tblcatalogstockitem(si_id),FOREIGN KEY (si_under) REFERENCES tblstockgroup (sg_id), FOREIGN KEY (si_type) REFERENCES tblstockitemtype (type_id),  FOREIGN KEY (si_unitOfMeasure) REFERENCES tblunitofmeasure (uom_id), FOREIGN KEY (si_color) REFERENCES tblcolor (color_id))");
            s.execute("  CREATE TABLE tblstockitem(si_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,PRIMARY KEY(si_id), si_alias varchar(60) DEFAULT NULL,  si_under int DEFAULT NULL,  si_length decimal(40,2) DEFAULT NULL,  si_width decimal(40,2) DEFAULT NULL,  si_thickness decimal(40,2) DEFAULT NULL ,si_rate decimal(40,2) DEFAULT NULL,  si_unitOfMeasure int DEFAULT NULL,  si_openingBalance decimal(40,2) DEFAULT NULL,  si_sizeA decimal(40,2) DEFAULT NULL,si_sizeB decimal(40,2) DEFAULT NULL,si_package varchar(40) DEFAULT NULL,si_numbers int DEFAULT NULL,si_unit varchar(40) DEFAULT NULL,  si_type int DEFAULT NULL,  si_name varchar(100) DEFAULT NULL,  created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  created_user int DEFAULT NULL,  modified_user int DEFAULT NULL,    si_categoryid int ,FOREIGN KEY(si_categoryid) REFERENCES tblCategory(category_id), si_colorid int, FOREIGN KEY(si_colorid) REFERENCES tblcolor(color_id),  si_finishtypeid int, FOREIGN KEY(si_finishtypeid) REFERENCES tblfinishtype (f_id), si_typeid int, FOREIGN KEY(si_typeid) REFERENCES tbltype(typeid),FOREIGN KEY (si_under) REFERENCES tblstockgroup (sg_id), FOREIGN KEY (si_type) REFERENCES tblstockitemtype (type_id),  FOREIGN KEY (si_unitOfMeasure) REFERENCES tblunitofmeasure (uom_id))");

            //s.execute("  CREATE TABLE tblfinishtype (f_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,PRIMARY KEY (f_id),f_name varchar(60) DEFAULT NULL)");

            //            s.execute("  CREATE TABLE tblinventorytransactionitems (  invtrans_id int NOT NULL,  invtrans_qty decimal(40,2) DEFAULT NULL,  invtrans_rate decimal(40,2) DEFAULT NULL,  invtrans_amount decimal(40,2) DEFAULT NULL,  invtrans_totalSize decimal(40,2) DEFAULT NULL,  invtrans_index int DEFAULT NULL,  invtrans_itemId int DEFAULT NULL,  invtrans_finishType int DEFAULT NULL,  invtrans_length decimal(40,2) DEFAULT NULL,  invtrans_width decimal(40,2) DEFAULT NULL,  invtrans_thickness decimal(40,2) DEFAULT NULL,  invtrans_making decimal(40,2) DEFAULT NULL,    FOREIGN KEY (invtrans_id) REFERENCES tblinventorytransaction (invtrans_id),  FOREIGN KEY (invtrans_itemId) REFERENCES tblstockitem (si_id),   FOREIGN KEY (invtrans_finishType) REFERENCES tblfinishtype (f_id) , invtrans_category_id int , FOREIGN KEY(invtrans_category_id) REFERENCES tblCategory(category_id) ,  invtrans_color_id int , FOREIGN KEY(invtrans_color_id) REFERENCES tblcolor(color_id) ,  invtrans_f_id int , FOREIGN KEY(invtrans_f_id) REFERENCES tblfinishtype(f_id) , Add invtrans_typeid int , FOREIGN KEY(invtrans_typeid) REFERENCES tbltype(typeid) , invtrans_Nos decimal(40,2))");
            s.execute("  CREATE TABLE tblinventorytransactionitems (  invtrans_id int NOT NULL,  invtrans_qty decimal(40,2) DEFAULT NULL,  invtrans_rate decimal(40,2) DEFAULT NULL,  invtrans_amount decimal(40,2) DEFAULT NULL,  invtrans_totalSize decimal(40,2) DEFAULT NULL,  invtrans_index int DEFAULT NULL,  invtrans_itemId int DEFAULT NULL,  invtrans_finishType int DEFAULT NULL,  invtrans_length decimal(40,2) DEFAULT NULL,  invtrans_width decimal(40,2) DEFAULT NULL,  invtrans_thickness decimal(40,2) DEFAULT NULL,  invtrans_making decimal(40,2) DEFAULT NULL,    FOREIGN KEY (invtrans_id) REFERENCES tblinventorytransaction (invtrans_id),  FOREIGN KEY (invtrans_itemId) REFERENCES tblstockitem (si_id),   FOREIGN KEY (invtrans_finishType) REFERENCES tblfinishtype (f_id) , invtrans_category_id int , FOREIGN KEY(invtrans_category_id) REFERENCES tblCategory(category_id) ,  invtrans_color_id int , FOREIGN KEY(invtrans_color_id) REFERENCES tblcolor(color_id) ,   invtrans_typeid int , FOREIGN KEY(invtrans_typeid) REFERENCES tbltype(typeid) ,  invtrans_package varchar(200) , invtrans_nos decimal(20,2) , invtrans_stk_under int , FOREIGN KEY(invtrans_stk_under) REFERENCES tblunitofmeasure (uom_id))");


            //             s.execute("  CREATE TABLE tblstockitem(si_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  si_alias varchar(60) DEFAULT NULL,  si_under int DEFAULT NULL,  si_length decimal(40,2) DEFAULT NULL,  si_width decimal(40,2) DEFAULT NULL,  si_thickness decimal(40,2) DEFAULT NULL,  si_rate decimal(40,2) DEFAULT NULL,  si_unitOfMeasure int DEFAULT NULL,  si_openingBalance decimal(40,2) DEFAULT NULL,  si_unit varchar(40) DEFAULT NULL,  si_type int DEFAULT NULL,  si_name varchar(100) DEFAULT NULL,  created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  created_user int DEFAULT NULL,  modified_user int DEFAULT NULL, PRIMARY KEY (si_id),  FOREIGN KEY (si_under) REFERENCES tblstockgroup (sg_id), FOREIGN KEY (si_type) REFERENCES tblstockitemtype (type_id),  FOREIGN KEY (si_unitOfMeasure) REFERENCES tblunitofmeasure (uom_id) , applicable_From_date date)");

            //            s.execute("  CREATE TABLE tblfinishtype (f_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,PRIMARY KEY (f_id),f_name varchar(60) DEFAULT NULL)");

            //            s.execute("  CREATE TABLE tblinventorytransactionitems (  invtrans_id int NOT NULL,  invtrans_qty decimal(40,2) DEFAULT NULL,  invtrans_rate decimal(40,2) DEFAULT NULL,  invtrans_amount decimal(40,2) DEFAULT NULL,  invtrans_totalSize decimal(40,2) DEFAULT NULL,  invtrans_index int DEFAULT NULL,  invtrans_itemId int DEFAULT NULL,  invtrans_finishType int DEFAULT NULL,  invtrans_length decimal(40,2) DEFAULT NULL,  invtrans_width decimal(40,2) DEFAULT NULL,  invtrans_thickness decimal(40,2) DEFAULT NULL,  invtrans_making decimal(40,2) DEFAULT NULL,    FOREIGN KEY (invtrans_id) REFERENCES tblinventorytransaction (invtrans_id),  FOREIGN KEY (invtrans_itemId) REFERENCES tblstockitem (si_id),   FOREIGN KEY (invtrans_finishType) REFERENCES tblfinishtype (f_id))");

            s.execute("  CREATE TABLE tblledger(ledger_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  ledger_name varchar(60) DEFAULT NULL,  ledger_under int DEFAULT NULL,  ledger_address varchar(200) DEFAULT NULL,  ledger_contactno varchar(40) DEFAULT NULL,  ledger_emailId varchar(100) DEFAULT NULL,  ledger_openingBalance decimal(40,2) DEFAULT NULL,  ledger_alias varchar(40) DEFAULT NULL,  opening_type int DEFAULT NULL,  dat date DEFAULT NULL,  ledger_inTaxo varchar(60) DEFAULT NULL,  ledger_saleTaxNo varchar(60) DEFAULT NULL,  ledger_ECSNumber varchar(60) DEFAULT NULL,  ledger_CVATNumber varchar(60) DEFAULT NULL, ledger_CSTNumber varchar(60) DEFAULT NULL, created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  created_user int DEFAULT NULL,  modified_user int DEFAULT NULL, PRIMARY KEY (ledger_id),  FOREIGN KEY (ledger_under) REFERENCES tblgroup (group_id) , applicable_From_date date , isdeletable int)");

            //By Sudeep
            //	    s.execute("  CREATE TABLE tblledger(ledger_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  ledger_name varchar(60) DEFAULT NULL,  ledger_under int DEFAULT NULL,  ledger_address varchar(200) DEFAULT NULL,  ledger_contactno varchar(40) DEFAULT NULL,  ledger_emailId varchar(100) DEFAULT NULL,  ledger_openingBalance decimal(40,2) DEFAULT NULL,  ledger_alias varchar(40) DEFAULT NULL,  opening_type int DEFAULT NULL,  dat date DEFAULT NULL,  ledger_inTaxo varchar(60) DEFAULT NULL,  ledger_saleTaxNo varchar(60) DEFAULT NULL,  created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  created_user int DEFAULT NULL,  modified_user int DEFAULT NULL, PRIMARY KEY (ledger_id),  FOREIGN KEY (ledger_under) REFERENCES tblgroup (group_id))");
            //            s.execute("  CREATE TABLE tblledger(ledger_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  ledger_name varchar(60) DEFAULT NULL,  ledger_under int DEFAULT NULL,  ledger_address varchar(200) DEFAULT NULL,  ledger_contactno varchar(40) DEFAULT NULL,  ledger_emailId varchar(100) DEFAULT NULL,  ledger_openingBalance decimal(40,2) DEFAULT NULL,  ledger_alias varchar(40) DEFAULT NULL,  opening_type int DEFAULT NULL,  dat date DEFAULT NULL,  ledger_inTaxo varchar(60) DEFAULT NULL,  ledger_saleTaxNo varchar(60) DEFAULT NULL,  ledger_ECSNumber varchar(60) DEFAULT NULL,  ledger_CVATNumber varchar(60) DEFAULT NULL,  created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  created_user int DEFAULT NULL,  modified_user int DEFAULT NULL, PRIMARY KEY (ledger_id),  FOREIGN KEY (ledger_under) REFERENCES tblgroup (group_id))");

            //By Sudeep
            s.execute("CREATE TABLE tbllength(length_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,PRIMARY KEY(length_id), length decimal(40,2) DEFAULT NULL)");

            //By Sudeep
            s.execute("CREATE TABLE tblwidth(width_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, PRIMARY KEY(width_id) ,width decimal(40,2) DEFAULT NULL)");

            //By Sudeep
            s.execute("CREATE TABLE tblthickness(thickness_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, PRIMARY KEY(thickness_id) ,thickness decimal(40,2) DEFAULT NULL)");



            s.execute("  CREATE TABLE tblledgercreditlimit (  ledger_id int DEFAULT NULL,  ledger_limit decimal(40,2) DEFAULT NULL,   FOREIGN KEY (ledger_id) REFERENCES tblledger (ledger_id))	    ");

            s.execute(" CREATE TABLE tblledgercurrentbalance(  ledger_id int DEFAULT NULL,  ledger_currentBalance decimal(40,2) DEFAULT NULL,  ledger_DebitOrCredit int DEFAULT NULL,   FOREIGN KEY (ledger_id) REFERENCES tblledger (ledger_id)) ");

            s.execute(" CREATE TABLE tblstockitemcurrentbalance(  si_id int DEFAULT NULL,  si_currentBalance decimal(40,2) DEFAULT NULL,  si_DebitOrCredit int DEFAULT NULL,  FOREIGN KEY (si_id) REFERENCES tblstockitem (si_id))");

            s.execute(" CREATE TABLE tblstockitemrate (  custid int DEFAULT NULL,  stkid int DEFAULT NULL,  rate decimal(50,2) DEFAULT NULL,   FOREIGN KEY (custid ) REFERENCES tblledger (ledger_id),   FOREIGN KEY (stkid) REFERENCES tblstockitem (si_id))");

            s.execute("  CREATE TABLE tbltempopenclosebalance(  opening decimal(40,2) DEFAULT NULL,  closing decimal(40,2) DEFAULT NULL,  openType int DEFAULT NULL,  closeType int DEFAULT NULL)");

            s.execute("  CREATE TABLE tbltransactionledger(  trans_id int NOT NULL,  trans_ledgerId int DEFAULT NULL,  trans_type int DEFAULT NULL,  trans_index int DEFAULT NULL,  trans_narration varchar(1000) DEFAULT NULL,  trans_amt decimal(40,2) DEFAULT NULL,  trans_checkNo varchar(80) DEFAULT NULL,  IsAvaibleToUser int DEFAULT NULL,   FOREIGN KEY (trans_ledgerId) REFERENCES tblledger (ledger_id),  FOREIGN KEY (trans_id) REFERENCES tbltransactionmain (trans_id))");

            s.execute("  CREATE TABLE tbltransactionotherdetails (  trans_id int NOT NULL,  trans_reference varchar(100) DEFAULT NULL,  trans_buyerOrderNo varchar(50) DEFAULT NULL,  trans_dispatchDocThrough varchar(50) DEFAULT NULL,  trans_dispatchDocNo varchar(50) DEFAULT NULL,  trans_amt decimal(40,2) DEFAULT NULL, trans_round_Off_amt decimal(40,2) DEFAULT NULL,  trans_payment varchar(40) DEFAULT NULL,  trans_vehicleNo varchar(50) DEFAULT NULL,  trans_challanNo varchar(40) DEFAULT NULL,  trans_poNo varchar(40) DEFAULT NULL,  trans_challanDate date DEFAULT NULL,  trans_poDate date DEFAULT NULL, trans_oc_No varchar(200), trans_oc_Date varchar(200), trans_date_Iss varchar(200) , trans_Time_Iss varchar(200), trans_date_Rem varchar(200) , trans_Time_Rem varchar(200) , FOREIGN KEY (trans_id) REFERENCES tbltransactionmain (trans_id))");

            s.execute(" CREATE TABLE tbltransactiontype ( transType_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  transType_name varchar(80) DEFAULT NULL,  PRIMARY KEY (transType_id))");

            s.execute(" CREATE TABLE tbltransactionvat (  trans_id int DEFAULT NULL,  vat_rate decimal(40,2) DEFAULT NULL,  vat_amt decimal(40,2) DEFAULT NULL,  discount_rate decimal(40,2) DEFAULT NULL,  discount_amt decimal(40,2) DEFAULT NULL,  shipping int DEFAULT NULL,  lbt_amt decimal(40,2) DEFAULT NULL,  FOREIGN KEY (trans_id) REFERENCES tbltransactionmain (trans_id) , tax_type varchar(100))");

            s.execute(" CREATE TABLE tbltranscactionchange (  sale_trans_id varchar(100),chalan_trans_id  varchar(100), voucher_type int)");

            s.execute(" CREATE TABLE tblStockItemOPBlUpdateRecord (  si_id int ,FOREIGN KEY (si_id) REFERENCES tblstockitem (si_id),update_opening_balance_date date , si_openingBalance decimal(30,2), si_under int , FOREIGN KEY (si_under) REFERENCES tblstockgroup (sg_id) ,si_name varchar(60))");

            String primary_id = gen.account.stockgroup.StockGroupDAO.getPrimaryID(conn);
            gen.account.stockgroup.StockGroupDAO.insertFinishedStockGroupAsDefault(primary_id, conn);

            String uom_id = gen.account.unitofmeasure.UnitOfMeasureDAO.getUOMTypeID(conn);
            gen.account.unitofmeasure.UnitOfMeasureDAO.insertSquareFeetUnitAsDefault(uom_id, conn);


//             */
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public static void create_Tables_Company_Info() throws Exception {
        try {
            gen.dto.Constants.COMPANYDETAILS_DATABASE_CALLING = "1";
            Connection conn = DatabaseConnection1.GetConnection();
            gen.dto.Constants.COMPANYDETAILS_DATABASE_CALLING = "";
            System.out.println("Conn --------- " + conn);
            Statement s = conn.createStatement();
            // for updation of table dont use
//            s.execute("Alter table TBLCOMPANYINFO add column applicable_From_date date");
//             s.execute("update TBLCOMPANYINFO set  applicable_From_date ='2013-1-1' ");
            /////   



            s.execute("create table tblothersetting(printpreview int,printDisplayFormat int,printPageFormat int,customerrate int,theme int)");
            s.execute("  CREATE TABLE tblLicence_Version_Details(application_ID varchar(50), mobile_Key varchar(50))");

            s.execute("CREATE TABLE tblLicence_Version_User_Details(mobile_Key varchar(50),mobile_User_1 varchar(50))");

            s.execute(" CREATE MEMORY TABLE TBLCOMPANYINFO(COMPANY_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,COMPANY_NAME VARCHAR(500) DEFAULT NULL,COMPANY_DATABASE VARCHAR(500) DEFAULT NULL,CREATED_BY VARCHAR(500) DEFAULT NULL,MODIFIED_BY VARCHAR(500) DEFAULT NULL,CREATED_DATE DATE DEFAULT NULL,MODIFIED_DATE DATE DEFAULT NULL,ALIAS VARCHAR(100) DEFAULT NULL,ADDRESS VARCHAR(500) DEFAULT NULL,CONTACTNO VARCHAR(100) DEFAULT NULL,EMAILID VARCHAR(200) DEFAULT NULL,INCOMETAXNO VARCHAR(60) DEFAULT NULL,SALETAXNO VARCHAR(60) DEFAULT NULL,DECLARATION VARCHAR(800) DEFAULT NULL,TAGLINE VARCHAR(700) DEFAULT NULL,TERMCNDITIONS VARCHAR(1000) DEFAULT NULL,NAMEOFGOD VARCHAR(200) DEFAULT NULL,SIGNAUTHORITY VARCHAR(200) DEFAULT NULL,VATTINNO VARCHAR(60) DEFAULT NULL,NOTE VARCHAR(500) DEFAULT NULL,LBTNO VARCHAR(60) DEFAULT NULL,FIELD1 VARCHAR(60) DEFAULT NULL,FIELD2 VARCHAR(60) DEFAULT NULL , applicable_From_date date)");
            s.execute("  CREATE MEMORY TABLE TBLROLE(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,ROLE VARCHAR(200) DEFAULT NULL)");
            s.execute("  CREATE MEMORY TABLE TBLUSERDETAILS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,USERNAME VARCHAR(200) DEFAULT NULL,PASSWORD VARCHAR(200) DEFAULT NULL,EMAILID VARCHAR(60) DEFAULT NULL,EMAILD_PASSWORD VARCHAR(60) DEFAULT NULL,ROLE_ID INTEGER DEFAULT NULL,TYPE INTEGER DEFAULT NULL,FOREIGN KEY(ROLE_ID) REFERENCES TBLROLE(ID))");
            s.execute("  CREATE MEMORY TABLE TBLCOMPANIESIMAGE(COMPANY_ID INTEGER DEFAULT NULL,COMPANY_NAME VARCHAR(300) DEFAULT NULL,COMPANY_IMAGE BLOB(1G))");
            s.execute(" CREATE MEMORY TABLE TBLCURRENTCOMPANY(COMPANY_NAME VARCHAR(300) DEFAULT NULL,COMPANY_ID INTEGER DEFAULT NULL,COMPANY_DATABASE VARCHAR(200) DEFAULT NULL,USER_ID INTEGER DEFAULT NULL,FOREIGN KEY(COMPANY_ID) REFERENCES TBLCOMPANYINFO(COMPANY_ID),FOREIGN KEY(USER_ID) REFERENCES TBLUSERDETAILS(ID))");
            s.execute(" CREATE MEMORY TABLE TBLFEATURE(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,FEATURE VARCHAR(200) DEFAULT NULL)");
            s.execute("  CREATE MEMORY TABLE TBLROLEFEATURES(ROLE_ID INTEGER DEFAULT NULL,FEATURE_ID INTEGER DEFAULT NULL,ISACTIVE TINYINT DEFAULT NULL,FOREIGN KEY(ROLE_ID) REFERENCES TBLROLE(ID),FOREIGN KEY(FEATURE_ID) REFERENCES TBLFEATURE(ID))");
            s.execute("  CREATE MEMORY TABLE TBLUSERTOCOMPANY(USER_ID INTEGER DEFAULT NULL,COMPANY_ID INTEGER DEFAULT NULL,COMPANY_NAME VARCHAR(200) DEFAULT NULL,FOREIGN KEY(USER_ID) REFERENCES TBLUSERDETAILS(ID),FOREIGN KEY(COMPANY_ID) REFERENCES TBLCOMPANYINFO(COMPANY_ID))");
            s.execute("  CREATE MEMORY TABLE TBLUSERTOROLE(USER_ID INTEGER DEFAULT NULL,ROLE_ID INTEGER DEFAULT NULL,FOREIGN KEY(USER_ID) REFERENCES TBLUSERDETAILS(ID),FOREIGN KEY(ROLE_ID) REFERENCES TBLROLE(ID))");
//            s.execute(" INSERT INTO TBLCOMPANYINFO VALUES(1,'UNNATI SALES','unnatisales',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'2013-1-1')");
//            s.execute(" INSERT INTO TBLCOMPANYINFO VALUES(1,'First','first',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'2013-1-1')");
//            s.execute(" INSERT INTO TBLCOMPANYINFO VALUES(1,'First','first',NULL,NULL,NULL,NULL,NULL,'','','','','',NULL,NULL,NULL,NULL,NULL,'',NULL,NULL,NULL,NULL,'2012-1-1')");
            s.execute(" INSERT INTO TBLROLE VALUES(1,'Admin')");
            s.execute(" INSERT INTO TBLROLE VALUES(2,'Standard')");
            s.execute(" INSERT INTO TBLROLE VALUES(3,'Reports')");
            s.execute(" INSERT INTO TBLROLE VALUES(4,'AccountVoucher')");
            s.execute(" INSERT INTO TBLROLE VALUES(5,'Group')");
            s.execute(" INSERT INTO TBLROLE VALUES(6,'StockItem')");
            s.execute(" INSERT INTO TBLUSERDETAILS VALUES(1,'admin','admin',NULL,NULL,NULL,NULL)");
            s.execute(" INSERT INTO TBLFEATURE VALUES(1,'Group')");
            s.execute(" INSERT INTO TBLFEATURE VALUES(2,'Ledger')");
            s.execute(" INSERT INTO TBLFEATURE VALUES(3,'Stock Group')");
            s.execute(" INSERT INTO TBLFEATURE VALUES(4,'Stock Item')");
            s.execute(" INSERT INTO TBLFEATURE VALUES(5,'Unit Of measure')");
            s.execute(" INSERT INTO TBLFEATURE VALUES(7,'Sale')");
            s.execute(" INSERT INTO TBLFEATURE VALUES(8,'Purchase')");
            s.execute(" INSERT INTO TBLFEATURE VALUES(9,'Receipt')");
            s.execute(" INSERT INTO TBLFEATURE VALUES(10,'Payment')");
            s.execute(" INSERT INTO TBLFEATURE VALUES(11,'Challan')");
            s.execute(" INSERT INTO TBLFEATURE VALUES(12,'Contra')");
            s.execute(" INSERT INTO TBLFEATURE VALUES(13,'Report')");
            s.execute(" INSERT INTO TBLFEATURE VALUES(14,'CompanySettings')");
            s.execute(" INSERT INTO TBLFEATURE VALUES(15,'NetworkSettings')");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(1,1,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(1,2,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(1,3,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(1,4,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(1,5,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(1,7,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(1,8,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(1,9,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(1,10,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(1,11,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(1,12,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(1,13,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(1,14,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(1,15,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(2,1,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(2,2,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(2,3,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(2,4,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(2,5,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(2,7,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(2,8,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(2,9,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(2,10,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(2,11,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(2,12,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(2,13,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(2,14,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(2,15,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(3,1,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(3,2,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(3,3,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(3,4,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(3,5,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(3,7,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(3,8,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(3,9,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(3,10,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(3,11,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(3,12,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(3,13,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(3,14,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(3,15,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(4,1,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(4,2,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(4,3,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(4,4,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(4,5,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(4,7,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(4,8,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(4,9,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(4,10,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(4,11,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(4,12,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(4,13,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(4,14,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(4,15,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(5,1,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(5,2,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(5,3,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(5,4,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(5,5,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(5,7,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(5,8,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(5,9,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(5,10,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(5,11,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(5,12,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(5,13,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(5,14,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(5,15,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(6,1,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(6,2,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(6,3,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(6,4,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(6,5,1)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(6,7,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(6,8,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(6,9,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(6,10,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(6,11,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(6,12,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(6,13,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(6,14,0)");
            s.execute(" INSERT INTO TBLROLEFEATURES VALUES(6,15,0)");
//            s.execute(" INSERT INTO TBLUSERTOCOMPANY VALUES(1,1,'UNNATI SALES')");
//            s.execute(" INSERT INTO TBLUSERTOCOMPANY VALUES(1,1,'First')");
            s.execute(" INSERT INTO TBLUSERTOROLE VALUES(1,1)");
        } catch (Exception ex) {
            ex.printStackTrace();
            Logger.getLogger(MainClass.class.getName()).log(Level.SEVERE, null, ex);
            throw ex;
        }
    }
}
