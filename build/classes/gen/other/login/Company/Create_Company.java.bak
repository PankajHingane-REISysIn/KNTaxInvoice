/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gen.other.login.Company;

import com.sun.org.apache.xerces.internal.impl.dv.util.Base64;
import gen.database.connection.DatabaseConnection1;
import gen.dto.Label;
import gen.mainclass.AllAdSuMuDiSettingsNew1;
import gen.mainclass.FindregeditEntry;
import gen.other.CompanySettings.CompanySettingsDAO;
import gen.other.CompanySettings.CompanySettingsDTO;
import gen.other.DatabaseBackupRestore.Company_InformationDTO;
import java.awt.AWTKeyStroke;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.awt.image.WritableRaster;
import java.beans.PropertyVetoException;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import org.apache.commons.io.IOUtils;

/**
 *
 * @author admin
 */
public class Create_Company extends javax.swing.JInternalFrame {

    private static String installedServerPath = "";
    String database_Name_For_Newly_Company = "";
    String company_Cliked_Name = "";
    String company_Cliked_Database_Name = "";
    DefaultTableModel tableModelCompanyList_Company_Delete = new DefaultTableModel();
    private List<gen.other.CompanySettings.CompanySettingsDTO> companySettingsDTOList_Company_Delete = new ArrayList<gen.other.CompanySettings.CompanySettingsDTO>();
    gen.other.CompanySettings.CompanySettingsDTO companySettingsDTO = new gen.other.CompanySettings.CompanySettingsDTO();
    gen.mainclass.SetWaitTimer settimer = new gen.mainclass.SetWaitTimer();
    final String dir = System.getProperty("user.dir");
    JDialog dialog = new JDialog();
    JOptionPane optionPane = new JOptionPane("", JOptionPane.INFORMATION_MESSAGE, JOptionPane.DEFAULT_OPTION, null, new Object[]{}, null);
    private String source = "";
    byte[] b1;

    /**
     * Creates new form Create_Company
     */
    public Create_Company() {
	initComponents();
	setTitle("Create Company");
	intialise_Company_Delete();
	getInstalledServerPath();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        applicationSettingsPanel2 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        buttonApply_Company_Delete = new javax.swing.JButton();
        buttonExit_Company_Delete = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        tablecompanyList_Company_Delete = new javax.swing.JTable();
        jPanel27 = new javax.swing.JPanel();
        txtNameOfGod1 = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        txtCompanyName1 = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        txtCompanyAlias1 = new javax.swing.JTextField();
        jScrollPane13 = new javax.swing.JScrollPane();
        txtCompanyTagLine1 = new javax.swing.JTextArea();
        jScrollPane14 = new javax.swing.JScrollPane();
        txtCompanyAddress1 = new javax.swing.JTextArea();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        txtCompanyContact1 = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        txtCompanyMail1 = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        txtCompanyITN1 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        txtCompanySTN1 = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        txtCompanyCSTNo1 = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        txtCompanyDeclaration1 = new javax.swing.JTextArea();
        jLabel56 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        txtCompanyTermsConditions1 = new javax.swing.JTextArea();
        jLabel57 = new javax.swing.JLabel();
        txtCompanySignature1 = new javax.swing.JTextField();
        btncompanyClear1 = new javax.swing.JButton();
        btnCompanyCreate1 = new javax.swing.JButton();
        btnUpdate1 = new javax.swing.JButton();
        btnDelete1 = new javax.swing.JButton();
        lblcompany_ID1 = new javax.swing.JLabel();
        LogoPanelView1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();

        setClosable(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Kasturi-logo-1.png"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel45, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.jLabel45.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(buttonApply_Company_Delete, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.buttonApply_Company_Delete.text")); // NOI18N
        buttonApply_Company_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonApply_Company_DeleteActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(buttonExit_Company_Delete, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.buttonExit_Company_Delete.text")); // NOI18N
        buttonExit_Company_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExit_Company_DeleteActionPerformed(evt);
            }
        });

        tablecompanyList_Company_Delete.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablecompanyList_Company_Delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablecompanyList_Company_DeleteMouseClicked(evt);
            }
        });
        tablecompanyList_Company_Delete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablecompanyList_Company_DeleteKeyPressed(evt);
            }
        });
        jScrollPane12.setViewportView(tablecompanyList_Company_Delete);

        jPanel27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtNameOfGod1.setText(org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.txtNameOfGod1.text")); // NOI18N
        txtNameOfGod1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameOfGod1KeyPressed(evt);
            }
        });

        jLabel46.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel46, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.jLabel46.text")); // NOI18N

        txtCompanyName1.setText(org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.txtCompanyName1.text")); // NOI18N
        txtCompanyName1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanyName1FocusGained(evt);
            }
        });
        txtCompanyName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyName1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCompanyName1KeyTyped(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel47, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.jLabel47.text")); // NOI18N

        jLabel48.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel48, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.jLabel48.text")); // NOI18N

        txtCompanyAlias1.setText(org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.txtCompanyAlias1.text")); // NOI18N
        txtCompanyAlias1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanyAlias1FocusGained(evt);
            }
        });
        txtCompanyAlias1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyAlias1KeyPressed(evt);
            }
        });

        txtCompanyTagLine1.setColumns(20);
        txtCompanyTagLine1.setRows(5);
        txtCompanyTagLine1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanyTagLine1FocusGained(evt);
            }
        });
        txtCompanyTagLine1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyTagLine1KeyPressed(evt);
            }
        });
        jScrollPane13.setViewportView(txtCompanyTagLine1);

        txtCompanyAddress1.setColumns(20);
        txtCompanyAddress1.setRows(5);
        txtCompanyAddress1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanyAddress1FocusGained(evt);
            }
        });
        txtCompanyAddress1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyAddress1KeyPressed(evt);
            }
        });
        jScrollPane14.setViewportView(txtCompanyAddress1);

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel49, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.jLabel49.text")); // NOI18N

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel50, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.jLabel50.text")); // NOI18N

        txtCompanyContact1.setText(org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.txtCompanyContact1.text")); // NOI18N
        txtCompanyContact1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyContact1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCompanyContact1KeyTyped(evt);
            }
        });

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel51, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.jLabel51.text")); // NOI18N

        txtCompanyMail1.setText(org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.txtCompanyMail1.text")); // NOI18N
        txtCompanyMail1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanyMail1FocusGained(evt);
            }
        });
        txtCompanyMail1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyMail1KeyPressed(evt);
            }
        });

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel52, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.jLabel52.text")); // NOI18N

        txtCompanyITN1.setText(org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.txtCompanyITN1.text")); // NOI18N
        txtCompanyITN1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyITN1KeyPressed(evt);
            }
        });

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel53, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.jLabel53.text")); // NOI18N

        txtCompanySTN1.setText(org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.txtCompanySTN1.text")); // NOI18N
        txtCompanySTN1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanySTN1KeyPressed(evt);
            }
        });

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel54, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.jLabel54.text")); // NOI18N

        txtCompanyCSTNo1.setText(org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.txtCompanyCSTNo1.text")); // NOI18N
        txtCompanyCSTNo1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyCSTNo1KeyPressed(evt);
            }
        });

        jLabel55.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel55, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.jLabel55.text")); // NOI18N

        txtCompanyDeclaration1.setColumns(20);
        txtCompanyDeclaration1.setRows(5);
        txtCompanyDeclaration1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanyDeclaration1FocusGained(evt);
            }
        });
        txtCompanyDeclaration1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyDeclaration1KeyPressed(evt);
            }
        });
        jScrollPane15.setViewportView(txtCompanyDeclaration1);

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel56, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.jLabel56.text")); // NOI18N

        txtCompanyTermsConditions1.setColumns(20);
        txtCompanyTermsConditions1.setRows(5);
        txtCompanyTermsConditions1.setPreferredSize(new java.awt.Dimension(168, 94));
        txtCompanyTermsConditions1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanyTermsConditions1FocusGained(evt);
            }
        });
        txtCompanyTermsConditions1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyTermsConditions1KeyPressed(evt);
            }
        });
        jScrollPane16.setViewportView(txtCompanyTermsConditions1);

        jLabel57.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel57, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.jLabel57.text")); // NOI18N

        txtCompanySignature1.setText(org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.txtCompanySignature1.text")); // NOI18N
        txtCompanySignature1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanySignature1FocusGained(evt);
            }
        });
        txtCompanySignature1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanySignature1KeyPressed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btncompanyClear1, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.btncompanyClear1.text")); // NOI18N
        btncompanyClear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncompanyClear1ActionPerformed(evt);
            }
        });
        btncompanyClear1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btncompanyClear1KeyPressed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btnCompanyCreate1, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.btnCompanyCreate1.text")); // NOI18N
        btnCompanyCreate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompanyCreate1ActionPerformed(evt);
            }
        });
        btnCompanyCreate1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCompanyCreate1KeyPressed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btnUpdate1, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.btnUpdate1.text")); // NOI18N
        btnUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btnDelete1, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.btnDelete1.text")); // NOI18N
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(lblcompany_ID1, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.lblcompany_ID1.text")); // NOI18N

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel52)
                                    .addComponent(jLabel53)
                                    .addComponent(jLabel54)
                                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCompanyCSTNo1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCompanySTN1)
                                    .addComponent(txtCompanyITN1)))
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel57)
                                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel27Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jScrollPane16))
                                    .addGroup(jPanel27Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtCompanySignature1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel47)
                                    .addGroup(jPanel27Layout.createSequentialGroup()
                                        .addComponent(jLabel46)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNameOfGod1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCompanyName1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel27Layout.createSequentialGroup()
                                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel48)
                                            .addComponent(jLabel49)
                                            .addComponent(jLabel50)
                                            .addComponent(jLabel51))
                                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel27Layout.createSequentialGroup()
                                                .addGap(29, 29, 29)
                                                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtCompanyContact1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtCompanyMail1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtCompanyAlias1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                                .addComponent(btncompanyClear1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCompanyCreate1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnUpdate1)
                                .addGap(65, 65, 65)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblcompany_ID1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDelete1)
                        .addGap(74, 74, 74))))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtNameOfGod1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel46))
                    .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCompanyName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblcompany_ID1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCompanyAlias1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel49)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel50))
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCompanyContact1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCompanyMail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel51))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCompanyITN1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel52))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel53)
                    .addComponent(txtCompanySTN1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel54)
                    .addComponent(txtCompanyCSTNo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel55)
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCompanySignature1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel57)))
                    .addComponent(jLabel56))
                .addGap(18, 18, 18)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btncompanyClear1)
                    .addComponent(btnCompanyCreate1)
                    .addComponent(btnUpdate1)
                    .addComponent(btnDelete1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.openide.awt.Mnemonics.setLocalizedText(LogoPanelView1, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.LogoPanelView1.text")); // NOI18N
        LogoPanelView1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        org.openide.awt.Mnemonics.setLocalizedText(jButton3, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.jButton3.text")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btnClear, org.openide.util.NbBundle.getMessage(Create_Company.class, "Create_Company.btnClear.text")); // NOI18N
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout applicationSettingsPanel2Layout = new javax.swing.GroupLayout(applicationSettingsPanel2);
        applicationSettingsPanel2.setLayout(applicationSettingsPanel2Layout);
        applicationSettingsPanel2Layout.setHorizontalGroup(
            applicationSettingsPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(applicationSettingsPanel2Layout.createSequentialGroup()
                .addGroup(applicationSettingsPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(applicationSettingsPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(applicationSettingsPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(applicationSettingsPanel2Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(LogoPanelView1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(applicationSettingsPanel2Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(applicationSettingsPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)))))
                    .addGroup(applicationSettingsPanel2Layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(buttonApply_Company_Delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonExit_Company_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );
        applicationSettingsPanel2Layout.setVerticalGroup(
            applicationSettingsPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(applicationSettingsPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(applicationSettingsPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(applicationSettingsPanel2Layout.createSequentialGroup()
                        .addComponent(LogoPanelView1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClear))
                    .addComponent(jLabel45))
                .addGap(26, 26, 26)
                .addGroup(applicationSettingsPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonApply_Company_Delete)
                    .addComponent(buttonExit_Company_Delete))
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(applicationSettingsPanel2Layout.createSequentialGroup()
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(applicationSettingsPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(applicationSettingsPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonApply_Company_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonApply_Company_DeleteActionPerformed
    }//GEN-LAST:event_buttonApply_Company_DeleteActionPerformed

    private void buttonExit_Company_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExit_Company_DeleteActionPerformed
	try {
	    // TODO add your handling code here:
	    //	this.dispose();
	    Create_Company.this.setClosed(true);
	} catch (PropertyVetoException ex) {
	    ex.printStackTrace();
	    Logger.getLogger(Create_Company.class.getName()).log(Level.SEVERE, null, ex);
	}
    }//GEN-LAST:event_buttonExit_Company_DeleteActionPerformed

    private void tablecompanyList_Company_DeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablecompanyList_Company_DeleteMouseClicked
	// TODO add your handling code here:
	// set current selected Company DataBase
	for (CompanySettingsDTO companySettingsDTO : companySettingsDTOList_Company_Delete) {
	    if (companySettingsDTO.getCompany_name().equals(tableModelCompanyList_Company_Delete.getValueAt(tablecompanyList_Company_Delete.getSelectedRow(), 0).toString())) {
		alter_Company(tableModelCompanyList_Company_Delete.getValueAt(tablecompanyList_Company_Delete.getSelectedRow(), 0).toString(), tableModelCompanyList_Company_Delete.getValueAt(tablecompanyList_Company_Delete.getSelectedRow(), 1).toString());
		btnCompanyCreate1.setEnabled(false);
		btnUpdate1.setEnabled(true);
	    }
	}
    }//GEN-LAST:event_tablecompanyList_Company_DeleteMouseClicked

    private void tablecompanyList_Company_DeleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablecompanyList_Company_DeleteKeyPressed
	// TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
	    //setFocus(event);
	    tablecompanyList_Company_DeleteMouseClicked(null);
	}
    }//GEN-LAST:event_tablecompanyList_Company_DeleteKeyPressed

    private void txtNameOfGod1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameOfGod1KeyPressed
	// TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
	    txtCompanyName1.requestFocus();
	}
    }//GEN-LAST:event_txtNameOfGod1KeyPressed

    private void txtCompanyName1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanyName1FocusGained
	// TODO add your handling code here:
    }//GEN-LAST:event_txtCompanyName1FocusGained

    private void txtCompanyName1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyName1KeyPressed
	// TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
	    // validation for Specical character and only number
	    if (validation_FOR_CreateCompany_Naming(txtCompanyName1.getText().toString().trim())) {
		txtCompanyAlias1.requestFocus();
	    } else {
		txtCompanyName1.requestFocus();
	    }

	} else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
	    txtNameOfGod1.requestFocus();
	}
    }//GEN-LAST:event_txtCompanyName1KeyPressed

    private void txtCompanyName1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyName1KeyTyped
	// TODO add your handling code here:

	filterCharacter(evt, txtCompanyName1);
    }//GEN-LAST:event_txtCompanyName1KeyTyped

    private void txtCompanyAlias1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanyAlias1FocusGained
	// TODO add your handling code here:
    }//GEN-LAST:event_txtCompanyAlias1FocusGained

    private void txtCompanyAlias1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyAlias1KeyPressed
	// TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
	    txtCompanyTagLine1.requestFocus();
	} else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
	    txtCompanyName1.requestFocus();
	}
    }//GEN-LAST:event_txtCompanyAlias1KeyPressed

    private void txtCompanyTagLine1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanyTagLine1FocusGained
	// TODO add your handling code here:
    }//GEN-LAST:event_txtCompanyTagLine1FocusGained

    private void txtCompanyTagLine1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyTagLine1KeyPressed
	// TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
	    txtCompanyAddress1.requestFocus();
	} else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
	    txtCompanyAlias1.requestFocus();
	}
    }//GEN-LAST:event_txtCompanyTagLine1KeyPressed

    private void txtCompanyAddress1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanyAddress1FocusGained
	// TODO add your handling code here:
    }//GEN-LAST:event_txtCompanyAddress1FocusGained

    private void txtCompanyAddress1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyAddress1KeyPressed
	// TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
	    txtCompanyContact1.requestFocus();
	} else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
	    txtCompanyTagLine1.requestFocus();
	}
    }//GEN-LAST:event_txtCompanyAddress1KeyPressed

    private void txtCompanyContact1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyContact1KeyPressed
	// TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
	    txtCompanyMail1.requestFocus();
	} else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
	    txtCompanyAddress1.requestFocus();
	}
    }//GEN-LAST:event_txtCompanyContact1KeyPressed

    private void txtCompanyMail1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanyMail1FocusGained
	// TODO add your handling code here:
    }//GEN-LAST:event_txtCompanyMail1FocusGained

    private void txtCompanyMail1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyMail1KeyPressed
	// TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
	    txtCompanyITN1.requestFocus();
	} else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
	    txtCompanyContact1.requestFocus();
	}
    }//GEN-LAST:event_txtCompanyMail1KeyPressed

    private void txtCompanyITN1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyITN1KeyPressed
	// TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
	    txtCompanySTN1.requestFocus();
	} else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
	    txtCompanyMail1.requestFocus();
	}
    }//GEN-LAST:event_txtCompanyITN1KeyPressed

    private void txtCompanySTN1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanySTN1KeyPressed
	// TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
	    txtCompanyCSTNo1.requestFocus();
	} else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
	    txtCompanyITN1.requestFocus();
	}
    }//GEN-LAST:event_txtCompanySTN1KeyPressed

    private void txtCompanyCSTNo1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyCSTNo1KeyPressed
	// TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
	    txtCompanyDeclaration1.requestFocus();
	} else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
	    txtCompanySTN1.requestFocus();
	}
    }//GEN-LAST:event_txtCompanyCSTNo1KeyPressed

    private void txtCompanyDeclaration1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanyDeclaration1FocusGained
	// TODO add your handling code here:
    }//GEN-LAST:event_txtCompanyDeclaration1FocusGained

    private void txtCompanyDeclaration1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyDeclaration1KeyPressed
	// TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
	    txtCompanyTermsConditions1.requestFocus();
	} else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
	    txtCompanyCSTNo1.requestFocus();
	}
    }//GEN-LAST:event_txtCompanyDeclaration1KeyPressed

    private void txtCompanyTermsConditions1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanyTermsConditions1FocusGained
	// TODO add your handling code here:
    }//GEN-LAST:event_txtCompanyTermsConditions1FocusGained

    private void txtCompanyTermsConditions1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyTermsConditions1KeyPressed
	// TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
	    txtCompanySignature1.requestFocus();
	} else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
	    txtCompanyDeclaration1.requestFocus();
	}
    }//GEN-LAST:event_txtCompanyTermsConditions1KeyPressed

    private void txtCompanySignature1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanySignature1FocusGained
	// TODO add your handling code here:
    }//GEN-LAST:event_txtCompanySignature1FocusGained

    private void txtCompanySignature1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanySignature1KeyPressed
	// TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
	    btnCompanyCreate1.requestFocus();
	} else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
	    txtCompanyTermsConditions1.requestFocus();
	}
    }//GEN-LAST:event_txtCompanySignature1KeyPressed

    private void btncompanyClear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncompanyClear1ActionPerformed
	// TODO add your handling code here:
	txtNameOfGod1.setText("");
	txtCompanyName1.setText("");
	txtCompanyAddress1.setText("");
	txtCompanyAlias1.setText("");
	txtCompanyContact1.setText("");
	txtCompanyITN1.setText("");
	txtCompanyMail1.setText("");
	txtCompanySTN1.setText("");
	txtCompanyDeclaration1.setText("");
	txtCompanyTagLine1.setText("");
	txtCompanyCSTNo1.setText("");
	txtCompanyTermsConditions1.setText("");
	txtCompanySignature1.setText("");
	lblcompany_ID1.setText("ID");


	btnCompanyCreate1.setEnabled(true);
	btnUpdate1.setEnabled(false);


	LogoPanelView1.setIcon(null);
	LogoPanelView1.revalidate();

	txtCompanyName1.requestFocus();
	source = "";
    }//GEN-LAST:event_btncompanyClear1ActionPerformed

    private void btncompanyClear1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btncompanyClear1KeyPressed
	// TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
	    btncompanyClear1ActionPerformed(null);
	} else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
	    btnCompanyCreate1.requestFocus();
	} else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
	    txtCompanySignature1.requestFocus();
	}
    }//GEN-LAST:event_btncompanyClear1KeyPressed

    private void btnCompanyCreate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompanyCreate1ActionPerformed
	// TODO add your handling code here:

	String ledger_name = txtCompanyName1.getText().trim();
	Pattern p = Pattern.compile("[a-zA-Z0-9]");
	Matcher m = p.matcher(ledger_name);

	Pattern p1 = Pattern.compile("[^a-z0-9 ]", Pattern.CASE_INSENSITIVE);
	Matcher m1 = p1.matcher(ledger_name);
	boolean flag = m1.find();

	String email = txtCompanyMail1.getText().toString().trim();
	String expression = "^[\\w\\.-]+@([\\w\\-]+\\.)+[A-Z]{2,4}$";
	Pattern pattern = Pattern.compile(expression, Pattern.CASE_INSENSITIVE);
	Matcher matcher = pattern.matcher(email);

	if (txtCompanyName1.getText().trim().equals("")) {
	    JOptionPane.showMessageDialog(null, "Enter Name Of Company");
	    txtCompanyName1.requestFocus();
	} else if (!m.find()) {
	    JOptionPane.showMessageDialog(null, "Enter Valid Name Of Company");
	    txtCompanyName1.requestFocus();
	} else if (flag) {
	    JOptionPane.showMessageDialog(null, "Enter Only Alphabet and Number in  Name Of Company");
	    txtCompanyName1.requestFocus();
	} else if (!lblcompany_ID1.getText().toString().trim().equals("ID")) {
	    JOptionPane.showMessageDialog(null, "Enter Name Of Company");
	    txtCompanyName1.requestFocus();
	} else if (!matcher.matches() && !txtCompanyMail1.getText().toString().trim().equals("")) {
	    JOptionPane.showMessageDialog(null, Label.ENTER_VALUE_FOR_EMAIL_ID);
	    txtCompanyMail1.requestFocus();
	} else {
	    txtCompanyName1.transferFocus();
	    int current = 0;
	    Connection conn = null;
	    try {
		gen.dto.Constants.COMPANYDETAILS_DATABASE_CALLING = "1";
		conn = DatabaseConnection1.GetConnection();
		conn.setAutoCommit(false);
		Statement st = conn.createStatement();

		// create new company

		// get the first Word from the company_name to add in database with id
		String[] result = txtCompanyName1.getText().toString().trim().split(" ", 2);
		String first_Word = "";
		String rest_Words = "";
		// use st that ArrayIndex of bound problem shuld not occcur if only 1 word is present
		for (int i = 0; i < result.length; i++) {
		    if (i == 0) {
			first_Word = result[0];
		    } else if (i == 1) {
			rest_Words = result[1];
		    }
		}
		System.out.println("First: " + first_Word);
		System.out.println("Rest: " + rest_Words);

		// find id to ADD in Database Name of New Created Company
		String add_ID_To_NewCompany = gen.other.CompanySettings.CompanySettingsDAO.get_Max_Company_ID();

		// pass database Name for Newly creted company
		database_Name_For_Newly_Company = first_Word + add_ID_To_NewCompany;

		List<Company_InformationDTO> new_databaseCreateList = new ArrayList<Company_InformationDTO>();
		Company_InformationDTO company_InformationDTO = new Company_InformationDTO();
		// add New company Database Name in company_InformationDTO
		company_InformationDTO.setCompany_Database_Name(database_Name_For_Newly_Company);
		new_databaseCreateList.add(company_InformationDTO);
		// Create New Database for Newly created Company
		if (gen.dto.Constants.DATABASE_SERVER.equals("com.mysql.jdbc.Driver")) {
		    gen.other.DatabaseSpiliting.DatabaseSplitingDAO.createNewDatabase(new_databaseCreateList);
		}
		List<CompanySettingsDTO> companySettings_InformationDTOList = new ArrayList<CompanySettingsDTO>();

		CompanySettingsDTO companySettingsDTO = new CompanySettingsDTO();
		//companySettingsDTO.setCompany_id(Long.parseLong(lblcompany_ID1.getText().toString().trim()));
		companySettingsDTO.setCompany_name(txtCompanyName1.getText().toString().trim());
		System.out.println("Comapny _NMAE  ------------------------------ " + txtCompanyName1.getText().toString().trim());

		companySettingsDTO.setNameOfGod(txtNameOfGod1.getText().toString().trim());
		companySettingsDTO.setCompany_DatabaseName(database_Name_For_Newly_Company);
		companySettingsDTO.setcompany_Alias(txtCompanyAlias1.getText().toString().trim());
		companySettingsDTO.setcompany_Address(txtCompanyAddress1.getText().toString().trim());
		companySettingsDTO.setcompany_ContactNo(txtCompanyContact1.getText().toString().trim());
		companySettingsDTO.setcompany_Created_by("");
		companySettingsDTO.setcompany_Created_date("");
		companySettingsDTO.setcompany_Declaration(txtCompanyDeclaration1.getText().toString().trim());
		companySettingsDTO.setcompany_EmailId(txtCompanyMail1.getText().toString().trim());
		companySettingsDTO.setcompany_Field1("");
		companySettingsDTO.setcompany_Field2("");
		companySettingsDTO.setcompany_IncomeTaxNo(txtCompanyITN1.getText().toString().trim());
		companySettingsDTO.setcompany_LBTNo("");
		companySettingsDTO.setcompany_Modified_by("");
		companySettingsDTO.setcompany_Modified_date("");
		companySettingsDTO.setcompany_Note("");
		companySettingsDTO.setcompany_SaleTaxNo(txtCompanyCSTNo1.getText().toString().trim());
		companySettingsDTO.setcompany_SignAuthority(txtCompanySignature1.getText().toString().trim());
		companySettingsDTO.setcompany_VatTinNo(txtCompanySTN1.getText().toString().trim());
		companySettingsDTO.setcompany_TermCnditions(txtCompanyTermsConditions1.getText().toString().trim());
		companySettingsDTO.setcompany_TagLine(txtCompanyTagLine1.getText().toString().trim());
		companySettings_InformationDTOList.add(companySettingsDTO);

		// pass empty company_List so that it is use in calling function
		List<String> company_List = new ArrayList<String>();
		gen.other.DatabaseSpiliting.DatabaseSplitingDAO.insert_NewlyCreated_Company(company_List, database_Name_For_Newly_Company, "", "", companySettings_InformationDTOList);
		//////////////////////////////////////////

		BufferedImage mImage;
		final String dir = System.getProperty("user.dir");
		File imgfile = new File("");
		FileInputStream fin = null;
//		source = "";
		if (source != null && !source.isEmpty()) {
		    imgfile = new File(source);
		    fin = new FileInputStream(imgfile);
		    mImage = ImageIO.read(imgfile);

		    PreparedStatement pre = conn.prepareStatement("insert into tblcompaniesimage(company_name,company_id,company_image) values(?,?,?)");
		    pre.setString(1, txtCompanyName1.getText().toString().trim());
		    pre.setString(2, add_ID_To_NewCompany);
		    if (source != null && !source.isEmpty()) {
			pre.setBinaryStream(3, fin, (int) imgfile.length());
		    } else {
			pre.setString(3, "NULL");
		    }
		    pre.executeUpdate();
		}


		//		backupDB_Database_Delete("aj1", "root", "adm", "D:/exe.sql");
		//		Boolean flag = restoreDB_Database_Delete("w74", "root", "adm", "D:/exe.sql");

		new Thread(new Runnable() {
		    @Override
		    public void run() {
			JInternalFrame newsas = new JInternalFrame();
			startEmptyWaitTimerForFrame(newsas, database_Name_For_Newly_Company);
		    }
		}).start();

		// delete the file of All_Database_information.Enc
		Path target5 = Paths.get("D:/exe.sql");
		if (Files.exists(target5)) {
		    Files.deleteIfExists(target5);
		}

		conn.commit();
		gen.dto.Constants.COMPANYDETAILS_DATABASE_CALLING = "";

		btncompanyClear1ActionPerformed(evt);
		initilizeGUIComponents_Company_Delete();
	    } catch (Exception e) {
		e.printStackTrace();
		System.out.println("Exception : " + e);
	    }

	}
    }//GEN-LAST:event_btnCompanyCreate1ActionPerformed

    private void btnCompanyCreate1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCompanyCreate1KeyPressed
	// TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
	    btnCompanyCreate1ActionPerformed(null);
	} else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
	    btncompanyClear1.requestFocus();
	} else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
	    txtCompanySignature1.requestFocus();
	}
    }//GEN-LAST:event_btnCompanyCreate1KeyPressed

    private void btnUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate1ActionPerformed
	// TODO add your handling code here:
	String ledger_name = txtCompanyName1.getText().trim();
	Pattern p = Pattern.compile("[a-zA-Z0-9]");
	Matcher m = p.matcher(ledger_name);

	Pattern p1 = Pattern.compile("[^a-z0-9 ]", Pattern.CASE_INSENSITIVE);
	Matcher m1 = p1.matcher(ledger_name);
	boolean flag = m1.find();


	String email = txtCompanyMail1.getText().toString().trim();
	String expression = "^[\\w\\.-]+@([\\w\\-]+\\.)+[A-Z]{2,4}$";
	Pattern pattern = Pattern.compile(expression, Pattern.CASE_INSENSITIVE);
	Matcher matcher = pattern.matcher(email);

	if (txtCompanyName1.getText().trim().equals("")) {
	    JOptionPane.showMessageDialog(Create_Company.this, "Enter Name Of Company");
	    txtCompanyName1.requestFocus();
	} else if (!m.find()) {
	    JOptionPane.showMessageDialog(Create_Company.this, "Enter Valid Name Of Company");
	    txtCompanyName1.requestFocus();
	} else if (flag) {
	    JOptionPane.showMessageDialog(Create_Company.this, "Enter Only Alphabet and Number in  Name Of Company");
	    txtCompanyName1.requestFocus();
	} else if (lblcompany_ID1.getText().toString().trim().equals("ID")) {
	    JOptionPane.showMessageDialog(Create_Company.this, "Selete company to update");
	    txtCompanyName1.requestFocus();
	} else if (!matcher.matches() && !txtCompanyMail1.getText().toString().trim().equals("")) {
	    JOptionPane.showMessageDialog(Create_Company.this, Label.ENTER_VALUE_FOR_EMAIL_ID);
	    txtCompanyMail1.requestFocus();
	} else {
	    txtCompanyName1.transferFocus();
	    int current = 0;

	    try {
		// create new company
		// get the first Word from the company_name to add in database with id
		String[] result = txtCompanyName1.getText().toString().trim().split(" ", 2);
		String first_Word = "";
		String rest_Words = "";
		// use st that ArrayIndex of bound problem shuld not occcur if only 1 word is present
		for (int i = 0; i < result.length; i++) {
		    if (i == 0) {
			first_Word = result[0];
		    } else if (i == 1) {
			rest_Words = result[1];
		    }
		}
		System.out.println("First: " + first_Word);
		System.out.println("Rest: " + rest_Words);

		List<CompanySettingsDTO> companySettings_InformationDTOList = new ArrayList<CompanySettingsDTO>();

		CompanySettingsDTO companySettingsDTO = new CompanySettingsDTO();
		companySettingsDTO.setNameOfGod(txtNameOfGod1.getText().toString().trim());
		companySettingsDTO.setCompany_id(Long.parseLong(lblcompany_ID1.getText().toString().trim()));
		companySettingsDTO.setCompany_name(txtCompanyName1.getText().toString().trim());
		System.out.println("Comapny _NMAE  ------------------------------ " + txtCompanyName1.getText().toString().trim());
		companySettingsDTO.setcompany_Alias(txtCompanyAlias1.getText().toString().trim());
		companySettingsDTO.setcompany_Address(txtCompanyAddress1.getText().toString().trim());
		companySettingsDTO.setcompany_ContactNo(txtCompanyContact1.getText().toString().trim());
		companySettingsDTO.setcompany_Created_by("");
		companySettingsDTO.setcompany_Created_date("");
		companySettingsDTO.setcompany_Declaration(txtCompanyDeclaration1.getText().toString().trim());
		companySettingsDTO.setcompany_EmailId(txtCompanyMail1.getText().toString().trim());
		companySettingsDTO.setcompany_Field1("");
		companySettingsDTO.setcompany_Field2("");
		companySettingsDTO.setcompany_IncomeTaxNo(txtCompanyITN1.getText().toString().trim());
		companySettingsDTO.setcompany_LBTNo("");
		companySettingsDTO.setcompany_Modified_by("");
		companySettingsDTO.setcompany_Modified_date("");
		companySettingsDTO.setcompany_Note("");
		companySettingsDTO.setcompany_SaleTaxNo(txtCompanyCSTNo1.getText().toString().trim());
		companySettingsDTO.setcompany_SignAuthority(txtCompanySignature1.getText().toString().trim());
		companySettingsDTO.setcompany_VatTinNo(txtCompanySTN1.getText().toString().trim());
		companySettingsDTO.setcompany_TermCnditions(txtCompanyTermsConditions1.getText().toString().trim());
		companySettingsDTO.setcompany_TagLine(txtCompanyTagLine1.getText().toString().trim());
		companySettings_InformationDTOList.add(companySettingsDTO);

		gen.other.DatabaseSpiliting.DatabaseSplitingDAO.update_Company_Information(companySettings_InformationDTOList, company_Cliked_Name);

		//		if (control == 1) {
		gen.dto.Constants.COMPANYDETAILS_DATABASE_CALLING = "1";

		BufferedImage mImage;
		final String dir = System.getProperty("user.dir");
		File imgfile = null;
		FileInputStream fin = null;
		if (source != null && !source.isEmpty()) {
		    imgfile = new File(source);
		    fin = new FileInputStream(imgfile);

		    //File imgfile = new File(source);

		    //FileInputStream fin = new FileInputStream(imgfile);
		    Connection conn = DatabaseConnection1.GetConnection();

		    PreparedStatement prmt = conn.prepareStatement("delete from tblcompaniesimage where company_id = ? and company_name = ?");
		    prmt.setString(1, lblcompany_ID1.getText().toString().trim());
		    prmt.setString(2, company_Cliked_Name);
		    prmt.executeUpdate();

		    PreparedStatement pre = conn.prepareStatement("insert into tblcompaniesimage(company_name,company_id,company_image) values(?,?,?)");
		    pre.setString(1, txtCompanyName1.getText().toString().trim());
		    pre.setString(2, lblcompany_ID1.getText().toString().trim());
		    if (source != null && !source.isEmpty()) {
			pre.setBinaryStream(3, fin, (int) imgfile.length());
		    } else {
			pre.setString(3, "NULL");
		    }
		    pre.executeUpdate();

//		String query = "update tblcompaniesimage set  company_name = ?, company_image = ? where company_id = ? and company_name = ?";
//		PreparedStatement pre = conn.prepareStatement(query);
//
//		pre.setString(1, txtCompanyName1.getText().toString().trim());
//		System.out.println("Compnay clivked -----------" + company_Cliked_Name);
//		System.out.println("Compnay txtCompanyName1 -----------" + txtCompanyName1.getText().toString().trim());
//		if (source != null) {
////		    pre.setBinaryStream(2, fin, (int) imgfile.length());
//		    pre.setBinaryStream(2, fin, (long) imgfile.length());
//		} else {
//		    pre.setString(2, "");
//		}
//		pre.setString(3, lblcompany_ID1.getText().toString().trim());
//		pre.setString(4, company_Cliked_Name);
//		pre.executeUpdate();
		    //		}
		    pre.close();
		    conn.close();
		} 
		gen.dto.Constants.COMPANYDETAILS_DATABASE_CALLING = "";

		insert_Imagein_Company_Database(company_Cliked_Database_Name);

		JOptionPane.showMessageDialog(Create_Company.this, "Company Information Updated Successfully...");

		btncompanyClear1ActionPerformed(evt);
		initilizeGUIComponents_Company_Delete();

		btnCompanyCreate1.setEnabled(true);
		btnUpdate1.setEnabled(false);

		btncompanyClear1ActionPerformed(evt);
		initilizeGUIComponents_Company_Delete();

		System.out.println("4444444444444444444444444444444444444444444444444444444444444444444");
		// Remove icon when button is clicked.
		LogoPanelView1.setIcon(null);
		// **IMPORTANT** to call revalidate() to cause JLabel to resize and be repaint
		LogoPanelView1.revalidate();;
	    } catch (Exception e) {
		e.printStackTrace();
		System.out.println("Exception On Save button Click : " + e);
	    }

	}

//	txtCompanyAddress1.setEditable(false);
//	txtCompanyAlias1.setEditable(false);
//	txtCompanyContact1.setEditable(false);
//	txtCompanyDeclaration1.setEditable(false);
//	txtCompanyMail1.setEditable(false);
//	txtCompanyITN1.setEditable(false);
//	txtCompanyName1.setEditable(false);
//	txtCompanySTN1.setEditable(false);
//	txtCompanyTagLine1.setEditable(false);
//	txtCompanyTermsConditions1.setEditable(false);
//	txtNameOfGod1.setEditable(false);
//	txtCompanySignature1.setEditable(false);
//	txtCompanyCSTNo1.setEditable(false);

    }//GEN-LAST:event_btnUpdate1ActionPerformed

    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed
	// TODO add your handling code here:

	if (!lblcompany_ID1.getText().toString().trim().equals("ID")) {
	    JOptionPane optionPane = new JOptionPane("Do you want to Delete  Company" + " ?", JOptionPane.QUESTION_MESSAGE, JOptionPane.YES_NO_OPTION);
	    JDialog dialog = optionPane.createDialog("Delete");
	    Set<AWTKeyStroke> focusTraversalKeys = new HashSet<AWTKeyStroke>(dialog.getFocusTraversalKeys(0));
	    focusTraversalKeys.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_RIGHT, KeyEvent.VK_UNDEFINED));
	    focusTraversalKeys.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_LEFT, KeyEvent.VK_UNDEFINED));
	    dialog.setFocusTraversalKeys(0, focusTraversalKeys);

	    dialog.setVisible(true);
	    dialog.dispose();

	    System.out.println(" v optionPane.getValue()         " + optionPane.getValue());

	    // if click on yes button
	    if ("0".equals(optionPane.getValue().toString())) {
		try {
		    gen.dto.Constants.COMPANYDETAILS_DATABASE_CALLING = "1";
		    Connection conn = DatabaseConnection1.GetConnection();
		    conn.setAutoCommit(false);
		    PreparedStatement pre = conn.prepareStatement("delete from  tblcompaniesimage where company_name = ? and company_id = ?");
		    pre.setString(1, company_Cliked_Name);
		    pre.setString(2, lblcompany_ID1.getText().toString().trim());
		    pre.executeUpdate();


		    PreparedStatement prete = conn.prepareStatement("delete from   tblcurrentcompany where company_name = ? and company_id = ? ");
		    prete.setString(1, company_Cliked_Name);
		    prete.setString(2, lblcompany_ID1.getText().toString().trim());
		    prete.executeUpdate();


		    prete = conn.prepareStatement("delete from   tblusertocompany where company_name = ? and company_id = ? ");
		    prete.setString(1, company_Cliked_Name);
		    prete.setString(2, lblcompany_ID1.getText().toString().trim());
		    prete.executeUpdate();


		    PreparedStatement pret = conn.prepareStatement("delete from   tblcompanyinfo where company_name = ? and company_id = ? ");
		    pret.setString(1, company_Cliked_Name);
		    pret.setString(2, lblcompany_ID1.getText().toString().trim());
		    pret.executeUpdate();

		    System.out.println("!!!!!!!!3444444444444444444444444444444444444444444444444");

//		    JOptionPane.showMessageDialog(this, "Company Deleted Successfully...");

		    conn.commit();
		    conn.close();

		    gen.dto.Constants.COMPANYDETAILS_DATABASE_CALLING = "";
		    btncompanyClear1ActionPerformed(evt);
		    initilizeGUIComponents_Company_Delete();

		} catch (SQLException ex) {
		    ex.printStackTrace();
		    Logger.getLogger(Create_Company.class.getName()).log(Level.SEVERE, null, ex);
		}
	    }

	} else {
	    // JOptionPane.showMessageDialog(null, "Selete company to Delete");
	    txtCompanyName1.requestFocus();
	}
	btnCompanyCreate1.setEnabled(true);
	btnUpdate1.setEnabled(false);


    }//GEN-LAST:event_btnDelete1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
	// TODO add your handling code here:

	int dialogButton1 = JOptionPane.YES_NO_OPTION;
	int dialogResult1 = JOptionPane.showConfirmDialog(Create_Company.this, "Your Current Logo Will Be Removed,Do You Want To Proceed ?", "Warning", dialogButton1);
	if (dialogResult1 == 0) {
	    imageloading o = new imageloading();
	    o.setVisible(true);
	}
	//	else {
	//	    formInternalFrameActivated(null);
	//	}
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
	// TODO add your handling code here:
	// clear Image
	LogoPanelView1.setIcon(null);
	LogoPanelView1.revalidate();

	if (!lblcompany_ID1.getText().toString().trim().equals("ID")) {
	    try {
		gen.dto.Constants.COMPANYDETAILS_DATABASE_CALLING = "1";
		Connection conn = DatabaseConnection1.GetConnection();
		PreparedStatement pre = conn.prepareStatement("delete from  tblcompaniesimage where company_name = ? and company_id = ?");
		pre.setString(1, company_Cliked_Name);
		pre.setString(2, lblcompany_ID1.getText().toString().trim());
		pre.executeUpdate();
		gen.dto.Constants.COMPANYDETAILS_DATABASE_CALLING = "";
	    } catch (SQLException ex) {
		ex.printStackTrace();
		Logger.getLogger(Create_Company.class.getName()).log(Level.SEVERE, null, ex);
	    }
	} else {
	    JOptionPane.showMessageDialog(null, "Selete company to Delete");
	    txtCompanyName1.requestFocus();
	}
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtCompanyContact1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyContact1KeyTyped
	// TODO add your handling code here:
	char c = evt.getKeyChar();
	if (!Character.isDigit(c) && c != '-') {
	    evt.consume();
	}
	int flag = 0;
	String f = txtCompanyContact1.getText().trim();
	int i = 0;
	while (i < f.length()) {
	    if (f.charAt(i) == '-') {
		flag = 1;
		break;
	    }
	    i++;
	}
	if (flag == 1 && c == '-') {
	    evt.consume();
	}
    }//GEN-LAST:event_txtCompanyContact1KeyTyped
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LogoPanelView1;
    private javax.swing.JPanel applicationSettingsPanel2;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCompanyCreate1;
    private javax.swing.JButton btnDelete1;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.JButton btncompanyClear1;
    private javax.swing.JButton buttonApply_Company_Delete;
    private javax.swing.JButton buttonExit_Company_Delete;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JLabel lblcompany_ID1;
    private javax.swing.JTable tablecompanyList_Company_Delete;
    private javax.swing.JTextArea txtCompanyAddress1;
    private javax.swing.JTextField txtCompanyAlias1;
    private javax.swing.JTextField txtCompanyCSTNo1;
    private javax.swing.JTextField txtCompanyContact1;
    private javax.swing.JTextArea txtCompanyDeclaration1;
    private javax.swing.JTextField txtCompanyITN1;
    private javax.swing.JTextField txtCompanyMail1;
    private javax.swing.JTextField txtCompanyName1;
    private javax.swing.JTextField txtCompanySTN1;
    private javax.swing.JTextField txtCompanySignature1;
    private javax.swing.JTextArea txtCompanyTagLine1;
    private javax.swing.JTextArea txtCompanyTermsConditions1;
    private javax.swing.JTextField txtNameOfGod1;
    // End of variables declaration//GEN-END:variables

    private void intialise_Company_Delete() {
	initilizeGUIComponents_Company_Delete();
	setnemonic_Company_Delete();
    }

    private void initilizeGUIComponents_Company_Delete() {
	initComponentActiveInActive_Company_Delete();
	bindDTOTOGUI_Company_Delete();
    }

    private void initComponentActiveInActive_Company_Delete() {
	String col[] = {"CompanyName", ""};
	String data[][] = {{"", ""}};
	tableModelCompanyList_Company_Delete = new DefaultTableModel(data, col) {
	    @Override
	    public boolean isCellEditable(int row, int column) {
		return false;//This causes all cells to be not editable
	    }
	};
	tablecompanyList_Company_Delete.setModel(tableModelCompanyList_Company_Delete);
	JTableHeader header = tablecompanyList_Company_Delete.getTableHeader();
	header.setBackground(Color.yellow);
	tableModelCompanyList_Company_Delete.setRowCount(0);
	tableModelCompanyList_Company_Delete.setColumnCount(2);
	buttonApply_Company_Delete.setVisible(false);
	btnCompanyCreate1.setEnabled(true);
	btnUpdate1.setEnabled(false);

    }

    private void setnemonic_Company_Delete() {
	buttonApply_Company_Delete.setMnemonic(KeyEvent.VK_A);
	buttonExit_Company_Delete.setMnemonic(KeyEvent.VK_E);
	txtCompanyName1.requestFocus();
    }

    private void bindDTOTOGUI_Company_Delete() {
//	gen.other.CompanySettings.CompanysSettings.CURRENT_DATABASE_Company_Settings = "";
	// get Company_List
	companySettingsDTOList_Company_Delete = CompanySettingsDAO.getComapany_List("", "");
	tableModelCompanyList_Company_Delete.setRowCount(0);
	for (CompanySettingsDTO companySettingsDTO : companySettingsDTOList_Company_Delete) {
	    tableModelCompanyList_Company_Delete.setRowCount(tableModelCompanyList_Company_Delete.getRowCount() + 1);
	    // set into the table
	    tableModelCompanyList_Company_Delete.setValueAt(companySettingsDTO.getCompany_name(), tableModelCompanyList_Company_Delete.getRowCount() - 1, 0);
	    tableModelCompanyList_Company_Delete.setValueAt(companySettingsDTO.getCompany_id(), tableModelCompanyList_Company_Delete.getRowCount() - 1, 1);
	}
	setColumnWidth_Company_Delete(tablecompanyList_Company_Delete);
    }

    private void setColumnWidth_Company_Delete(JTable passedTable) {
	DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
	rightRenderer.setHorizontalAlignment(JLabel.LEFT);

	DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
	centerRenderer.setHorizontalAlignment(JLabel.CENTER);

	passedTable.getColumnModel().getColumn(0).setCellRenderer(rightRenderer);
	passedTable.getColumnModel().getColumn(0).setPreferredWidth(0);
	passedTable.getColumnModel().getColumn(0).setMinWidth(360);
	passedTable.getColumnModel().getColumn(0).setMaxWidth(360);

	passedTable.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
	passedTable.getColumnModel().getColumn(1).setPreferredWidth(0);
	passedTable.getColumnModel().getColumn(1).setMinWidth(80);
	passedTable.getColumnModel().getColumn(1).setMaxWidth(80);
    }

    //////////// Delete Company /////////////////////////////////////////////
    private void alter_Company(String company_Name, String company_ID) {
	try {
	    gen.dto.Constants.COMPANYDETAILS_DATABASE_CALLING = "1";
	    Connection con = DatabaseConnection1.GetConnection();

	    // Remove icon when button is clicked.
	    LogoPanelView1.setIcon(null);
	    // **IMPORTANT** to call revalidate() to cause JLabel to resize and be repaint
	    LogoPanelView1.revalidate();;

	    Statement stat = con.createStatement();
	    ResultSet rs = stat.executeQuery("SELECT company_image FROM tblcompaniesimage where company_name = '" + company_Name + "' and company_id = " + company_ID + "");
	    while (rs.next()) {

		Image img = null;
		BufferedImage mImage1 = null;
		byte[] bytes = null;
		System.out.println("Set icon ---------------------------------");
		if (gen.dto.Constants.DATABASE_SERVER.equals("com.mysql.jdbc.Driver")) {
		    bytes = rs.getBytes("company_image");
		    System.out.println("MYSQL ----------------------------------------" + bytes);
		} else {
//		    bytes = IOUtils.toByteArray((rs.getBlob("company_image")));
		    bytes = rs.getBytes("company_image");
		    System.out.println("Image ----------------------------------------" + bytes);
		}

		img = Toolkit.getDefaultToolkit().createImage(bytes);

		ImageIcon icon = new ImageIcon(img);
		Image img1 = icon.getImage();
		Image newimg = img.getScaledInstance(151, 150, Image.SCALE_SMOOTH);
		ImageIcon newicon = new ImageIcon(newimg);
		LogoPanelView1.setIcon(newicon);
	    }

	    con.close();
	    gen.dto.Constants.COMPANYDETAILS_DATABASE_CALLING = "";

	} catch (SQLException ex) {
	    ex.printStackTrace();
	    Logger.getLogger(Create_Company.class
		    .getName()).log(Level.SEVERE, null, ex);
	} catch (Exception e) {
	    e.printStackTrace();
	}



	try {

	    // set Company_ID to ID Label 
	    lblcompany_ID1.setText(company_ID);

	    String q = "";
	    //Connection conn;
	    ResultSet resultSet = null;
	    gen.dto.Constants.COMPANYDETAILS_DATABASE_CALLING = "1";
	    Connection conn = DatabaseConnection1.GetConnection();
	    conn.setAutoCommit(false);
	    Statement st = conn.createStatement();

	    q = "select * from tblcompanyinfo where company_name ='" + company_Name + "' and company_id = " + company_ID + "";
	    resultSet = st.executeQuery(q);
	    while (resultSet.next()) {
		String name = resultSet.getString("company_name");
		company_Cliked_Name = name;
		company_Cliked_Database_Name = resultSet.getString("company_database");

		txtNameOfGod1.setText(resultSet.getString("NameOfGod"));

		txtCompanyName1.setText(name);

		//txtCompanyName.setEnabled(false);
		String alias = resultSet.getString("Alias");
		txtCompanyAlias1.setText(alias);
		//txtCompanyAlias.setEnabled(false);
		String address = resultSet.getString("Address");
		txtCompanyAddress1.setText(address);
		//txtCompanyAddress.setEnabled(false);
		String contact = "" + resultSet.getString("ContactNo");
		txtCompanyContact1.setText(contact);
		//txtCompanyContact.setEnabled(false);
		String emailid = resultSet.getString("EmailId");
		txtCompanyMail1.setText(emailid);
		//txtCompanyMail.setEnabled(false);
		String income = "" + resultSet.getString("IncomeTaxNo");
		txtCompanyITN1.setText(income);
		//txtCompanyITN.setEnabled(false);
		String sales = "" + resultSet.getString("VatTinNo");
		txtCompanySTN1.setText(sales);
		//txtCompanySTN.setEnabled(false);
		String declaration = resultSet.getString("Declaration");
		txtCompanyDeclaration1.setText(declaration);
		//txtCompanyDeclaration.setEnabled(false);
		String tagline = resultSet.getString("TagLine");
		txtCompanyTagLine1.setText(tagline);
		//txtCompanyTagLine.setEnabled(false);
		String termsConditions = resultSet.getString("TermCnditions");
		txtCompanyTermsConditions1.setText(termsConditions);
		//txtCompanyTermsConditions.setEnabled(false);
		String nameOfGod = resultSet.getString("NameOfGod");
		txtNameOfGod1.setText(nameOfGod);
		//txtNameOfGod.setEnabled(false);
		String signAuthority = resultSet.getString("SignAuthority");
		txtCompanySignature1.setText(signAuthority);
		//txtCompanySignature.setEnabled(false);
		String cstNewNumber = resultSet.getString("SaleTaxNo");
		txtCompanyCSTNo1.setText(cstNewNumber);
		//txtCompanyCSTNo.setEnabled(false);
		//String LBTNumber = resultSet.getString("LBTNo");
		//txt.setText(LBTNumber);
		//txtLBTNumber.setEnabled(false);
	    }
	    conn.commit();
	    conn.close();
	    gen.dto.Constants.COMPANYDETAILS_DATABASE_CALLING = "";
	} catch (SQLException ex) {
	    ex.printStackTrace();
	    Logger
		    .getLogger(Create_Company.class
		    .getName()).log(Level.SEVERE, null, ex);
	}
    }
///////////////////////////////////////////////////////////////////////////
    /// create tables in Newly Created Database From generic Database.
    // Take BackUp

    public static boolean backupDB_Database_Delete(String dbName, String dbUserName, String dbPassword, String path) {
	Process runtimeProcess;

	String executeCmd = installedServerPath + "/server/bin/mysqldump -u " + dbUserName + " -p" + dbPassword + " " + dbName + " -r " + path;

	try {
	    runtimeProcess = Runtime.getRuntime().exec(executeCmd);
	    int processComplete = runtimeProcess.waitFor();

	    if (processComplete == 0) {
		System.out.println("Backup created successfully");
		return true;
	    } else {
		System.out.println("Could not create the backup");
	    }
	} catch (Exception ex) {
	    ex.printStackTrace();
	}
	return false;
    }

    // Restore  DataBase
    public static boolean restoreDB_Database_Delete(String dbName, String dbUserName, String dbPassword, String source) {
	Boolean flag = false;
//	String[] executeCmd = new String[]{"D:/MetalCopies/10-10-2013uploadcopy/server-Copy(2)/bin/mysql", "--user=" + dbUserName, "--password=" + dbPassword, dbName, "-e", "source " + source};
	String[] executeCmd = new String[]{installedServerPath + "/server/bin/mysql", "--user=" + dbUserName, "--password=" + dbPassword, dbName, "-e", "source " + source};
	Process runtimeProcess;
	try {

	    runtimeProcess = Runtime.getRuntime().exec(executeCmd);
	    int processComplete = runtimeProcess.waitFor();

	    if (processComplete == 0) {
		System.out.println("Backup restored successfully");
		flag = true;
	    } else {
		System.out.println("Could not restore the backup");
	    }
	} catch (Exception ex) {
	    ex.printStackTrace();
	}

	return flag;
    }

    private Boolean validation_FOR_CreateCompany_Naming(String company_Name_Text) {
	Boolean flag = true;
	try {
	    double d = Double.parseDouble(company_Name_Text);
	    flag = false;
	} catch (NumberFormatException nfe) {
	    System.out.println("nfe" + nfe);
	}
	return flag;
    }

    // Allow only number and character in CompanyName
    public static void filterCharacter(java.awt.event.KeyEvent evt, javax.swing.JTextField jtxtField) {
	char c = evt.getKeyChar();
	if (!Character.isLetterOrDigit(c)) {
	    evt.consume();
	}
	int i;

	if (c == '.') {
	    int flg = 0;
	    i = 0;
	    while (i < jtxtField.getText().trim().length()) {
		if (jtxtField.getText().trim().charAt(i) == '.') {
		    flg = 1;
		    break;
		}
		i++;
	    }

	    if (flg == 1) {
		evt.consume();
	    }
	}
    }

    public void startEmptyWaitTimerForFrame(JInternalFrame frame, String database_Name) {
	//Image img = new javax.swing.ImageIcon(dir + "/images/Kasturi-logo-1.png").getImage();
	//((java.awt.Frame) dialog.getOwner()).setIconImage(img);
	System.out.println("DDir ----------------------------------" + dir);
	optionPane.setIcon(new ImageIcon(new javax.swing.ImageIcon(dir + "/images/Thinfadingline.gif").getImage()));
	optionPane.setMessage("Wait..  Company is Creating...");
	dialog.add(optionPane);
	dialog.pack();
	dialog.setVisible(true);
	dialog.setLocationRelativeTo(frame);
	//long endTime = System.currentTimeMillis() + 15000;

	if (gen.dto.Constants.DATABASE_SERVER.equals("com.mysql.jdbc.Driver")) {
	    Boolean flag = true;
	    int i = 0;
	    while (flag && i == 0) {
		frame.setCursor(new Cursor(Cursor.WAIT_CURSOR));
		backupDB_Database_Delete("aj1", "root", "adm", "D:/exe.sql");
		flag = restoreDB_Database_Delete(database_Name, "root", "adm", "D:/exe.sql");
		i++;
	    }
	} else {
	    gen.other.CompanySettings.CompanysSettings.CURRENT_DATABASE_Company_Settings = database_Name;
	    create_tables();
	    gen.other.CompanySettings.CompanysSettings.CURRENT_DATABASE_Company_Settings = "";
	}

	// insert image into companies database table for printing purpose.
	insert_Imagein_Company_Database(database_Name);
	////////// complted ///////////////////////////////////////////

//	gen.other.CompanySettings.CompanysSettings.CURRENT_DATABASE_Company_Settings = "";
	frame.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
	dialog.setVisible(false);
	dialog.dispatchEvent(new WindowEvent(dialog, WindowEvent.WINDOW_CLOSING));

	JOptionPane.showMessageDialog(Create_Company.this, "Company Successfully Created");
    }

    private void insert_Imagein_Company_Database(String database_Name) {
	try {
	    // insert image into companies database table for printing purpose.
	    BufferedImage mImage1;
	    final String dir1 = System.getProperty("user.dir");
	    File imgfile1 = null;
	    FileInputStream fin1 = null;
	    if (source != null && !source.isEmpty()) {
		try {
		    imgfile1 = new File(source);
		    fin1 = new FileInputStream(imgfile1);


		} catch (FileNotFoundException ex) {
		    Logger.getLogger(Create_Company.class
			    .getName()).log(Level.SEVERE, null, ex);
		}
	    }
	    gen.other.CompanySettings.CompanysSettings.CURRENT_DATABASE_Company_Settings = database_Name;
	    System.out.println("DAtabase ---------------                   " + database_Name);
	    Connection conn1 = DatabaseConnection1.GetConnection();
	    conn1.setAutoCommit(false);
	    // delete already exist image
//	    PreparedStatement prmt = conn1.prepareStatement("delete from registration");
//	    prmt.executeUpdate();


//	    PreparedStatement pre1 = conn1.prepareStatement("insert into registration(image) values(?)");
//	    if (source != null && !source.isEmpty()) {
//		pre1.setBinaryStream(1, fin1, (int) imgfile1.length());
//	    } else {
//		pre1.setString(1, "");
//	    }
//	    pre1.executeUpdate();
	    gen.other.CompanySettings.CompanysSettings.CURRENT_DATABASE_Company_Settings = "";
	    conn1.commit();

	    ////////// complted ///////////////////////////////////////////


	} catch (SQLException ex) {
	    Logger.getLogger(Create_Company.class
		    .getName()).log(Level.SEVERE, null, ex);
	}
    }

    public final class imageloading extends javax.swing.JInternalFrame {

	BufferedImage mImage;
	Image scaledImage = null;
	ImageIcon scaledImageIcon = null;
	String name, name1;

	public imageloading() {
	    //JFrame frm=new JFrame("image loading test");
	    source = filechoose();
	    System.out.println("ViewEditCompany----->>imageloading -->>source: " + source);
	    File inputFile = new File(source);
	    try {
		mImage = ImageIO.read(inputFile);
	    } catch (IOException ex) {
		//Logger.getLogger(index.class.getName()).log(Level.SEVERE, null, ex);
	    }

	    scaledImage = mImage.getScaledInstance(LogoPanelView1.getWidth(), LogoPanelView1.getHeight(), Image.SCALE_SMOOTH);
	    scaledImageIcon = new ImageIcon(scaledImage);
	    FileInputStream fin = null;
	    try {

		final String dir = System.getProperty("user.dir");

		Connection conn = DatabaseConnection1.GetConnection();
		Statement st = conn.createStatement();



		File f1 = new File(source);//new File(dir + "/images/unnati_hinges_packing1_1.jpg");

		fin = new FileInputStream(f1);

		b1 = new byte[(int) f1.length()];
		fin.read(b1);
		fin.close();

		//  int ret = st.executeUpdate("insert into registration(image) values('"+b1+"')");
		// System.out.println("ViewEditCompany----->>imageloading -->>return: "+ ret);
	    } catch (Exception e) {
		System.out.println("Exception for---->>Image--->" + e);
	    }
//    int x=Integer.parseInt(""+LogoPanelView.getAlignmentX());
//    int y=Integer.parseInt(""+LogoPanelView.getAlignmentY());
//    
//    int h=mImage.getTileHeight();
//    int w=mImage.getTileWidth();

	    //LogoPanelView.setBorder(new TempClassForImage(scaledImage,LogoPanelView.getSize()));
	    LogoPanelView1.setIcon(scaledImageIcon);
	    // LogoPanelView.setBounds(x, y, w, h);
	    LogoPanelView1.show();


	}

	String filechoose() {
	    JFileChooser chooser = new JFileChooser();
	    chooser.setCurrentDirectory(new File("."));

	    chooser.setFileFilter(new javax.swing.filechooser.FileFilter() {
		public boolean accept(File f) {
		    name = f.getName().toLowerCase();
		    return name.endsWith(".gif") || name.endsWith(".jpg")
			    || name.endsWith(".jpeg") || f.isDirectory();
		}

		public String getDescription() {
		    return "Image files";
		}
	    });

	    int r = chooser.showOpenDialog(Create_Company.this);



	    if (r == JFileChooser.APPROVE_OPTION) {
		name1 = chooser.getSelectedFile().getAbsolutePath();
		StringBuffer sb = new StringBuffer();
		sb.append(name1);

		int l = sb.length();
		for (int i = 0; i < l; i++) {
		    if (sb.charAt(i) == '\\') {
			sb.insert(i, "\\");
			i++;
		    }
		}
	    }

	    return name1;
	}
    }

    private String getInstalledServerPath() {
	FindregeditEntry o = new FindregeditEntry();
//        String readRegistryEntry = o.read();
	installedServerPath = o.read();
	return installedServerPath;
    }

    private void create_tables() {
	try {
	    Connection conn = DatabaseConnection1.GetConnection();
	    Statement s = conn.createStatement();

//	    s.execute("CREATE TABLE REGISTRATION (image  CLOB)");
//	    s.execute("CREATE TABLE tblaccountvouchersmaxid (salemaxid int DEFAULT NULL,purchasemaxid int DEFAULT NULL,receiptmaxid int DEFAULT NULL,paymentmaxid int DEFAULT NULL,challanmaxid int DEFAULT NULL,journalmaxid int DEFAULT NULL,contramaxid int DEFAULT NULL,field3 int DEFAULT NULL,field4 int DEFAULT NULL,field5 int DEFAULT NULL)");
//	    s.execute("insert into tblaccountvouchersmaxid (salemaxid,purchasemaxid, receiptmaxid,paymentmaxid,challanmaxid,contramaxid) values(1,1,1,1,1,1)");
//
//	    s.execute("CREATE TABLE tbladsumudisettings (name varchar(40) DEFAULT NULL,value tinyint DEFAULT NULL)");
//	    s.execute(" insert into tbladsumudisettings values('pagination','50')");
//
//	    s.execute("Create table tblcompanyinfo (company_id    int  GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null  ,primary key (company_id) , company_name  varchar(500), company_database  varchar(500) , created_by     varchar(500) , modified_by    varchar(500) , created_date    date , modified_date   date , Alias   varchar(100) , Address    varchar(500) , ContactNo   varchar(100) , EmailId   varchar(200) , IncomeTaxNo   varchar(60) , SaleTaxNo    varchar(60)  , Declaration   varchar(800) , TagLine     varchar(700) , TermCnditions   varchar(1000) , NameOfGod   varchar(200) , SignAuthority    varchar(200) , VatTinNo   varchar(60) , Note    varchar(500), LBTNo   varchar(60) , Field1   varchar(60) , Field2   varchar(60) )");
//	    s.execute("  CREATE TABLE tbllogin (username varchar(60) NOT NULL,password varchar(60) DEFAULT NULL,new_entry int DEFAULT NULL,acc_vouchers int DEFAULT NULL,report int DEFAULT NULL,production int DEFAULT NULL,user_type int DEFAULT NULL,email_id varchar(80) DEFAULT NULL,email_pass varchar(60) DEFAULT NULL,PRIMARY KEY (username))");
//	    s.execute("  CREATE TABLE tblcurrentlogin (username varchar(80) DEFAULT NULL, FOREIGN KEY (username) REFERENCES tbllogin (username))");
//
//	    s.execute("  CREATE TABLE tblgroup (group_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, PRIMARY KEY (group_id), group_name varchar(40) DEFAULT NULL,group_under int DEFAULT NULL,  group_alias varchar(40) DEFAULT NULL,  group_isDeletable tinyint DEFAULT NULL,  created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  modified_user int DEFAULT NULL,  created_user int DEFAULT NULL ) ");
//	    s.execute("INSERT INTO tblgroup VALUES (50,'Primary',NULL,NULL,NULL,NULL,NULL,NULL,NULL),(54,'Current Liability',50,'',NULL,NULL,NULL,NULL,NULL),(55,'Current Assets',50,'',NULL,NULL,NULL,NULL,NULL),(56,'Suspense Account',50,'',NULL,NULL,NULL,NULL,NULL),(57,'Sundry Debtors',54,'',NULL,NULL,NULL,NULL,NULL),(58,'Sundry Creditors',54,'',NULL,NULL,NULL,NULL,NULL),(59,'Stock-In-Hand',55,'',NULL,NULL,NULL,NULL,NULL),(60,'Sales Account',50,'',NULL,NULL,NULL,NULL,NULL),(61,'Purchase Account',50,'',NULL,NULL,NULL,NULL,NULL),(62,'Loan Liability',50,'',NULL,NULL,NULL,NULL,NULL),(63,'Loans and Advances',55,'',NULL,NULL,NULL,NULL,NULL),(64,'Indirect Expenses',50,'',NULL,NULL,NULL,NULL,NULL),(65,'Indirect Income',50,'',NULL,NULL,NULL,NULL,NULL),(66,'Income (Direct)',50,'',NULL,NULL,NULL,NULL,NULL),(67,'Income (Indirect)',50,'',NULL,NULL,NULL,NULL,NULL),(68,'Expense (Direct)',50,'',NULL,NULL,NULL,NULL,NULL),(69,'Expense (Indirect)',50,'',NULL,NULL,NULL,NULL,NULL),(70,'Bank Account',55,'',NULL,NULL,NULL,NULL,NULL),(71,'Cash In Hand',55,'',NULL,NULL,NULL,NULL,NULL);");
//
//	    s.execute(" CREATE TABLE tbltransactionmain (trans_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,trans_receiptNo int DEFAULT NULL, trans_date date DEFAULT NULL,  trans_typeIndex int DEFAULT NULL,  trans_narration varchar(1000) DEFAULT NULL,  trans_grandtotal decimal(40,2) DEFAULT NULL,  trans_transport int DEFAULT NULL,  trans_lessBillAmt decimal(40,2) DEFAULT NULL,  trans_payment varchar(40) DEFAULT NULL,  created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  created_user int DEFAULT NULL,  modified_user int DEFAULT NULL,  PRIMARY KEY (trans_id))");
//	    s.execute(" CREATE TABLE tblinventorytransaction ( invtrans_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  trans_id int DEFAULT NULL,  invtrans_type int DEFAULT NULL,  dat date DEFAULT NULL,  PRIMARY KEY (invtrans_id), FOREIGN KEY (trans_id) REFERENCES tbltransactionmain (trans_id))");
//
//	    s.execute(" CREATE TABLE tblstockgroup ( sg_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, sg_name varchar(60) DEFAULT NULL,  sg_alias varchar(40) DEFAULT NULL,  sg_under int DEFAULT NULL,  sg_lbtpercent decimal(20,2) DEFAULT NULL,  PRIMARY KEY (sg_id))");
//	    s.execute("insert into tblStockGroup(sg_name,sg_alias,sg_under) values('Primary','',0)");
//
//	    s.execute("  CREATE TABLE tblstockitemtype(type_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,type_name varchar(40) DEFAULT NULL,PRIMARY KEY (type_id)) ");
//	    s.execute("  CREATE TABLE tbluomtype ( uomType_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  uomType_name varchar(40) DEFAULT NULL,  PRIMARY KEY (uomType_id))");
//	    s.execute("INSERT INTO tbluomtype VALUES (1,'Simple'),(2,'Complex')");
//	    s.execute("  CREATE TABLE tblunitofmeasure(  uomType_id int NOT NULL,  uom_type varchar(50) DEFAULT NULL,  uom_symbol varchar(50) DEFAULT NULL,  uom_formalName varchar(50) DEFAULT NULL,  uom_noOfDecimalPts int DEFAULT NULL,  uom_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  PRIMARY KEY (uom_id),  FOREIGN KEY (uomType_id) REFERENCES tbluomtype (uomType_id))");
//	    s.execute("  CREATE TABLE tblstockitem(si_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  si_alias varchar(60) DEFAULT NULL,  si_under int DEFAULT NULL,  si_length decimal(40,2) DEFAULT NULL,  si_width decimal(40,2) DEFAULT NULL,  si_thickness decimal(40,2) DEFAULT NULL,  si_rate decimal(40,2) DEFAULT NULL,  si_unitOfMeasure int DEFAULT NULL,  si_openingBalance decimal(40,2) DEFAULT NULL,  si_unit varchar(40) DEFAULT NULL,  si_type int DEFAULT NULL,  si_name varchar(100) DEFAULT NULL,  PRIMARY KEY (si_id),  FOREIGN KEY (si_under) REFERENCES tblstockgroup (sg_id), FOREIGN KEY (si_type) REFERENCES tblstockitemtype (type_id),  FOREIGN KEY (si_unitOfMeasure) REFERENCES tblunitofmeasure (uom_id))");
//	    s.execute("  CREATE TABLE tblfinishtype (f_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,PRIMARY KEY (f_id),f_name varchar(60) DEFAULT NULL)");
//	    s.execute("  CREATE TABLE tblinventorytransactionitems (  invtrans_id int NOT NULL,  invtrans_qty decimal(40,2) DEFAULT NULL,  invtrans_rate decimal(40,2) DEFAULT NULL,  invtrans_amount decimal(40,2) DEFAULT NULL,  invtrans_totalSize decimal(40,2) DEFAULT NULL,  invtrans_index int DEFAULT NULL,  invtrans_itemId int DEFAULT NULL,  invtrans_finishType int DEFAULT NULL,  invtrans_length decimal(40,2) DEFAULT NULL,  invtrans_width decimal(40,2) DEFAULT NULL,  invtrans_thickness decimal(40,2) DEFAULT NULL,  invtrans_making decimal(40,2) DEFAULT NULL,    FOREIGN KEY (invtrans_id) REFERENCES tblinventorytransaction (invtrans_id),  FOREIGN KEY (invtrans_itemId) REFERENCES tblstockitem (si_id),   FOREIGN KEY (invtrans_finishType) REFERENCES tblfinishtype (f_id))");
//	    s.execute("  CREATE TABLE tblledger(ledger_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  ledger_name varchar(60) DEFAULT NULL,  ledger_under int DEFAULT NULL,  ledger_address varchar(200) DEFAULT NULL,  ledger_contactno varchar(40) DEFAULT NULL,  ledger_emailId varchar(100) DEFAULT NULL,  ledger_openingBalance decimal(40,2) DEFAULT NULL,  ledger_alias varchar(40) DEFAULT NULL,  opening_type int DEFAULT NULL,  dat date DEFAULT NULL,  ledger_inTaxo varchar(60) DEFAULT NULL,  ledger_saleTaxNo varchar(60) DEFAULT NULL,  created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  created_user int DEFAULT NULL,  modified_user int DEFAULT NULL, PRIMARY KEY (ledger_id),  FOREIGN KEY (ledger_under) REFERENCES tblgroup (group_id))");
//	    s.execute("  CREATE TABLE tblledgercreditlimit (  ledger_id int DEFAULT NULL,  ledger_limit decimal(40,2) DEFAULT NULL,   FOREIGN KEY (ledger_id) REFERENCES tblledger (ledger_id))	    ");
//	    s.execute(" CREATE TABLE tblledgercurrentbalance(  ledger_id int DEFAULT NULL,  ledger_currentBalance decimal(40,2) DEFAULT NULL,  ledger_DebitOrCredit int DEFAULT NULL,   FOREIGN KEY (ledger_id) REFERENCES tblledger (ledger_id)) ");
//	    s.execute(" CREATE TABLE tblstockitemcurrentbalance(  si_id int DEFAULT NULL,  si_currentBalance decimal(40,2) DEFAULT NULL,  si_DebitOrCredit int DEFAULT NULL,  FOREIGN KEY (si_id) REFERENCES tblstockitem (si_id))");
//	    s.execute(" CREATE TABLE tblstockitemrate (  custid int DEFAULT NULL,  stkid int DEFAULT NULL,  rate decimal(50,2) DEFAULT NULL,   FOREIGN KEY (custid ) REFERENCES tblledger (ledger_id),   FOREIGN KEY (stkid) REFERENCES tblstockitem (si_id))");
//	    s.execute("  CREATE TABLE tbltempopenclosebalance(  opening decimal(40,2) DEFAULT NULL,  closing decimal(40,2) DEFAULT NULL,  openType int DEFAULT NULL,  closeType int DEFAULT NULL)");
//	    s.execute("  CREATE TABLE tbltransactionledger(  trans_id int NOT NULL,  trans_ledgerId int DEFAULT NULL,  trans_type int DEFAULT NULL,  trans_index int DEFAULT NULL,  trans_narration varchar(1000) DEFAULT NULL,  trans_amt decimal(40,2) DEFAULT NULL,  trans_checkNo varchar(80) DEFAULT NULL,  cashinhand_flag int DEFAULT NULL,   FOREIGN KEY (trans_ledgerId) REFERENCES tblledger (ledger_id),  FOREIGN KEY (trans_id) REFERENCES tbltransactionmain (trans_id))");
//	    s.execute("  CREATE TABLE tbltransactionotherdetails (  trans_id int NOT NULL,  trans_reference varchar(100) DEFAULT NULL,  trans_buyerOrderNo varchar(50) DEFAULT NULL,  trans_dispatchDocThrough varchar(50) DEFAULT NULL,  trans_dispatchDocNo varchar(50) DEFAULT NULL,  trans_amt decimal(40,2) DEFAULT NULL,  trans_payment varchar(40) DEFAULT NULL,  trans_vehicleNo varchar(50) DEFAULT NULL,  trans_challanNo varchar(40) DEFAULT NULL,  trans_poNo varchar(40) DEFAULT NULL,  trans_challanDate date DEFAULT NULL,  trans_poDate date DEFAULT NULL,   FOREIGN KEY (trans_id) REFERENCES tbltransactionmain (trans_id))");
//	    s.execute(" CREATE TABLE tbltransactiontype ( transType_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  transType_name varchar(80) DEFAULT NULL,  PRIMARY KEY (transType_id))");
//	    s.execute(" CREATE TABLE tbltransactionvat (  trans_id int DEFAULT NULL,  vat_rate decimal(40,2) DEFAULT NULL,  vat_amt decimal(40,2) DEFAULT NULL,  discount_rate decimal(40,2) DEFAULT NULL,  discount_amt decimal(40,2) DEFAULT NULL,  shipping int DEFAULT NULL,  lbt_amt decimal(40,2) DEFAULT NULL,  FOREIGN KEY (trans_id) REFERENCES tbltransactionmain (trans_id))");

	    
	    
	    s.execute("create table registration (image Blob)");
	    s.execute("create table tblbackup (email_backup_date date,drive_backup_date date,email_backup_time time,drive_backup_time time)");
	    s.execute("create table tblbackupsetting (email_backup int,drive_backup int,backup_on_exit int, username varchar(100) , drive_backup_path varchar(800))");
	    s.execute("CREATE TABLE tblaccountvouchersmaxid (salemaxid int DEFAULT NULL,purchasemaxid int DEFAULT NULL,receiptmaxid int DEFAULT NULL,paymentmaxid int DEFAULT NULL,challanmaxid int DEFAULT NULL,journalmaxid int DEFAULT NULL,contramaxid int DEFAULT NULL,field3 int DEFAULT NULL,field4 int DEFAULT NULL,field5 int DEFAULT NULL)");
	    s.execute("insert into tblaccountvouchersmaxid (salemaxid,purchasemaxid, receiptmaxid,paymentmaxid,challanmaxid,contramaxid) values(0,0,0,0,0,0)");

	    s.execute("CREATE TABLE tbladsumudisettings (name varchar(40) DEFAULT NULL,value tinyint DEFAULT NULL)");
	    s.execute(" insert into tbladsumudisettings values('pagination','50')");

	    s.execute("Create table tblcompanyinfo (company_id    int  GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null  ,primary key (company_id) , company_name  varchar(500), company_database  varchar(500) , created_by     varchar(500) , modified_by    varchar(500) , created_date    date , modified_date   date , Alias   varchar(100) , Address    varchar(500) , ContactNo   varchar(100) , EmailId   varchar(200) , IncomeTaxNo   varchar(60) , SaleTaxNo    varchar(60)  , Declaration   varchar(800) , TagLine     varchar(700) , TermCnditions   varchar(1000) , NameOfGod   varchar(200) , SignAuthority    varchar(200) , VatTinNo   varchar(60) , Note    varchar(500), LBTNo   varchar(60) , Field1   varchar(60) , Field2   varchar(60) )");
	    s.execute("  CREATE TABLE tbllogin (username varchar(60) NOT NULL,password varchar(60) DEFAULT NULL,new_entry int DEFAULT NULL,acc_vouchers int DEFAULT NULL,report int DEFAULT NULL,production int DEFAULT NULL,user_type int DEFAULT NULL,email_id varchar(80) DEFAULT NULL,email_pass varchar(60) DEFAULT NULL,PRIMARY KEY (username))");
	    s.execute("  CREATE TABLE tblcurrentlogin (username varchar(80) DEFAULT NULL, FOREIGN KEY (username) REFERENCES tbllogin (username))");

	    s.execute("  CREATE TABLE tblgroup (group_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, PRIMARY KEY (group_id), group_name varchar(40) DEFAULT NULL,group_under int DEFAULT NULL,  group_alias varchar(40) DEFAULT NULL,  group_isDeletable tinyint DEFAULT NULL,  created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  modified_user int DEFAULT NULL,  created_user int DEFAULT NULL ) ");
	    s.execute("INSERT INTO tblgroup VALUES (50,'Primary',NULL,NULL,NULL,NULL,NULL,NULL,NULL),(54,'Current Liability',50,'',NULL,NULL,NULL,NULL,NULL),(55,'Current Assets',50,'',NULL,NULL,NULL,NULL,NULL),(56,'Suspense Account',50,'',NULL,NULL,NULL,NULL,NULL),(57,'Sundry Debtors',54,'',NULL,NULL,NULL,NULL,NULL),(58,'Sundry Creditors',54,'',NULL,NULL,NULL,NULL,NULL),(59,'Stock-In-Hand',55,'',NULL,NULL,NULL,NULL,NULL),(60,'Sales Account',50,'',NULL,NULL,NULL,NULL,NULL),(61,'Purchase Account',50,'',NULL,NULL,NULL,NULL,NULL),(62,'Loan Liability',50,'',NULL,NULL,NULL,NULL,NULL),(63,'Loans and Advances',55,'',NULL,NULL,NULL,NULL,NULL),(64,'Indirect Expenses',50,'',NULL,NULL,NULL,NULL,NULL),(65,'Indirect Income',50,'',NULL,NULL,NULL,NULL,NULL),(66,'Income (Direct)',50,'',NULL,NULL,NULL,NULL,NULL),(67,'Income (Indirect)',50,'',NULL,NULL,NULL,NULL,NULL),(68,'Expense (Direct)',50,'',NULL,NULL,NULL,NULL,NULL),(69,'Expense (Indirect)',50,'',NULL,NULL,NULL,NULL,NULL),(70,'Bank Account',55,'',NULL,NULL,NULL,NULL,NULL),(71,'Cash In Hand',55,'',NULL,NULL,NULL,NULL,NULL);");

	    s.execute(" CREATE TABLE tbltransactionmain (trans_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,trans_receiptNo int DEFAULT NULL, trans_date date DEFAULT NULL,  trans_typeIndex int DEFAULT NULL,  trans_narration varchar(1000) DEFAULT NULL,  trans_grandtotal decimal(40,2) DEFAULT NULL,  trans_transport int DEFAULT NULL,  trans_lessBillAmt decimal(40,2) DEFAULT NULL,  trans_payment varchar(40) DEFAULT NULL,  created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  created_user int DEFAULT NULL,  modified_user int DEFAULT NULL,  PRIMARY KEY (trans_id))");
	    s.execute(" CREATE TABLE tblinventorytransaction ( invtrans_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  trans_id int DEFAULT NULL,  invtrans_type int DEFAULT NULL,  dat date DEFAULT NULL,  PRIMARY KEY (invtrans_id), FOREIGN KEY (trans_id) REFERENCES tbltransactionmain (trans_id))");

	    s.execute(" CREATE TABLE tblstockgroup ( sg_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, sg_name varchar(60) DEFAULT NULL,  sg_alias varchar(40) DEFAULT NULL,  sg_under int DEFAULT NULL,  sg_lbtpercent decimal(20,2) DEFAULT NULL,  PRIMARY KEY (sg_id))");
	    s.execute("insert into tblStockGroup(sg_name,sg_alias,sg_under) values('Primary','',0)");

	    s.execute("  CREATE TABLE tblstockitemtype(type_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,type_name varchar(40) DEFAULT NULL,PRIMARY KEY (type_id)) ");
	    s.execute("  CREATE TABLE tbluomtype ( uomType_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  uomType_name varchar(40) DEFAULT NULL,  PRIMARY KEY (uomType_id))");
	    s.execute("INSERT INTO tbluomtype VALUES (1,'Simple'),(2,'Complex')");
	    s.execute("  CREATE TABLE tblunitofmeasure(  uomType_id int NOT NULL,  uom_type varchar(50) DEFAULT NULL,  uom_symbol varchar(50) DEFAULT NULL,  uom_formalName varchar(50) DEFAULT NULL,  uom_noOfDecimalPts int DEFAULT NULL,  uom_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  PRIMARY KEY (uom_id),  FOREIGN KEY (uomType_id) REFERENCES tbluomtype (uomType_id))");
	    s.execute("  CREATE TABLE tblstockitem(si_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  si_alias varchar(60) DEFAULT NULL,  si_under int DEFAULT NULL,  si_length decimal(40,2) DEFAULT NULL,  si_width decimal(40,2) DEFAULT NULL,  si_thickness decimal(40,2) DEFAULT NULL,  si_rate decimal(40,2) DEFAULT NULL,  si_unitOfMeasure int DEFAULT NULL,  si_openingBalance decimal(40,2) DEFAULT NULL,  si_unit varchar(40) DEFAULT NULL,  si_type int DEFAULT NULL,  si_name varchar(100) DEFAULT NULL,  PRIMARY KEY (si_id),  FOREIGN KEY (si_under) REFERENCES tblstockgroup (sg_id), FOREIGN KEY (si_type) REFERENCES tblstockitemtype (type_id),  FOREIGN KEY (si_unitOfMeasure) REFERENCES tblunitofmeasure (uom_id))");
	    s.execute("  CREATE TABLE tblfinishtype (f_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,PRIMARY KEY (f_id),f_name varchar(60) DEFAULT NULL)");
	    s.execute("  CREATE TABLE tblinventorytransactionitems (  invtrans_id int NOT NULL,  invtrans_qty decimal(40,2) DEFAULT NULL,  invtrans_rate decimal(40,2) DEFAULT NULL,  invtrans_amount decimal(40,2) DEFAULT NULL,  invtrans_totalSize decimal(40,2) DEFAULT NULL,  invtrans_index int DEFAULT NULL,  invtrans_itemId int DEFAULT NULL,  invtrans_finishType int DEFAULT NULL,  invtrans_length decimal(40,2) DEFAULT NULL,  invtrans_width decimal(40,2) DEFAULT NULL,  invtrans_thickness decimal(40,2) DEFAULT NULL,  invtrans_making decimal(40,2) DEFAULT NULL,    FOREIGN KEY (invtrans_id) REFERENCES tblinventorytransaction (invtrans_id),  FOREIGN KEY (invtrans_itemId) REFERENCES tblstockitem (si_id),   FOREIGN KEY (invtrans_finishType) REFERENCES tblfinishtype (f_id))");
	    s.execute("  CREATE TABLE tblledger(ledger_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  ledger_name varchar(60) DEFAULT NULL,  ledger_under int DEFAULT NULL,  ledger_address varchar(200) DEFAULT NULL,  ledger_contactno varchar(40) DEFAULT NULL,  ledger_emailId varchar(100) DEFAULT NULL,  ledger_openingBalance decimal(40,2) DEFAULT NULL,  ledger_alias varchar(40) DEFAULT NULL,  opening_type int DEFAULT NULL,  dat date DEFAULT NULL,  ledger_inTaxo varchar(60) DEFAULT NULL,  ledger_saleTaxNo varchar(60) DEFAULT NULL,  created_date date DEFAULT NULL,  modified_date date DEFAULT NULL,  created_user int DEFAULT NULL,  modified_user int DEFAULT NULL, PRIMARY KEY (ledger_id),  FOREIGN KEY (ledger_under) REFERENCES tblgroup (group_id))");
	    s.execute("  CREATE TABLE tblledgercreditlimit (  ledger_id int DEFAULT NULL,  ledger_limit decimal(40,2) DEFAULT NULL,   FOREIGN KEY (ledger_id) REFERENCES tblledger (ledger_id))	    ");
	    s.execute(" CREATE TABLE tblledgercurrentbalance(  ledger_id int DEFAULT NULL,  ledger_currentBalance decimal(40,2) DEFAULT NULL,  ledger_DebitOrCredit int DEFAULT NULL,   FOREIGN KEY (ledger_id) REFERENCES tblledger (ledger_id)) ");
	    s.execute(" CREATE TABLE tblstockitemcurrentbalance(  si_id int DEFAULT NULL,  si_currentBalance decimal(40,2) DEFAULT NULL,  si_DebitOrCredit int DEFAULT NULL,  FOREIGN KEY (si_id) REFERENCES tblstockitem (si_id))");
	    s.execute(" CREATE TABLE tblstockitemrate (  custid int DEFAULT NULL,  stkid int DEFAULT NULL,  rate decimal(50,2) DEFAULT NULL,   FOREIGN KEY (custid ) REFERENCES tblledger (ledger_id),   FOREIGN KEY (stkid) REFERENCES tblstockitem (si_id))");
	    s.execute("  CREATE TABLE tbltempopenclosebalance(  opening decimal(40,2) DEFAULT NULL,  closing decimal(40,2) DEFAULT NULL,  openType int DEFAULT NULL,  closeType int DEFAULT NULL)");
	    s.execute("  CREATE TABLE tbltransactionledger(  trans_id int NOT NULL,  trans_ledgerId int DEFAULT NULL,  trans_type int DEFAULT NULL,  trans_index int DEFAULT NULL,  trans_narration varchar(1000) DEFAULT NULL,  trans_amt decimal(40,2) DEFAULT NULL,  trans_checkNo varchar(80) DEFAULT NULL,  cashinhand_flag int DEFAULT NULL,   FOREIGN KEY (trans_ledgerId) REFERENCES tblledger (ledger_id),  FOREIGN KEY (trans_id) REFERENCES tbltransactionmain (trans_id))");
	    s.execute("  CREATE TABLE tbltransactionotherdetails (  trans_id int NOT NULL,  trans_reference varchar(100) DEFAULT NULL,  trans_buyerOrderNo varchar(50) DEFAULT NULL,  trans_dispatchDocThrough varchar(50) DEFAULT NULL,  trans_dispatchDocNo varchar(50) DEFAULT NULL,  trans_amt decimal(40,2) DEFAULT NULL,  trans_payment varchar(40) DEFAULT NULL,  trans_vehicleNo varchar(50) DEFAULT NULL,  trans_challanNo varchar(40) DEFAULT NULL,  trans_poNo varchar(40) DEFAULT NULL,  trans_challanDate date DEFAULT NULL,  trans_poDate date DEFAULT NULL,   FOREIGN KEY (trans_id) REFERENCES tbltransactionmain (trans_id))");
	    s.execute(" CREATE TABLE tbltransactiontype ( transType_id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,  transType_name varchar(80) DEFAULT NULL,  PRIMARY KEY (transType_id))");
	    s.execute(" CREATE TABLE tbltransactionvat (  trans_id int DEFAULT NULL,  vat_rate decimal(40,2) DEFAULT NULL,  vat_amt decimal(40,2) DEFAULT NULL,  discount_rate decimal(40,2) DEFAULT NULL,  discount_amt decimal(40,2) DEFAULT NULL,  shipping int DEFAULT NULL,  lbt_amt decimal(40,2) DEFAULT NULL,  FOREIGN KEY (trans_id) REFERENCES tbltransactionmain (trans_id))");
	    s.execute(" CREATE TABLE tbltranscactionchange (  sale_trans_id varchar(100),chalan_trans_id  varchar(100) , voucher_type int)");
	    s.execute(" CREATE TABLE tblStockItemOPBlUpdateRecord (  si_id int ,FOREIGN KEY (si_id) REFERENCES tblstockitem (si_id),update_opening_balance_date date , si_openingBalance decimal(30,2), si_under int , FOREIGN KEY (si_under) REFERENCES tblstockgroup (sg_id) ,si_name varchar(60))");


	} catch (SQLException ex) {
	    ex.printStackTrace();
	    Logger.getLogger(Create_Company.class.getName()).log(Level.SEVERE, null, ex);
	}
    }
}
